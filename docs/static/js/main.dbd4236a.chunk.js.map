{"version":3,"sources":["../node_modules/protean-elements/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/apca-rating/index.ts","components/LookupTableCell/index.tsx","components/APCADemo/static.ts","components/SampleText/index.tsx","components/ProteanInput/index.tsx","utils/guid/index.ts","components/RadioButton/index.tsx","components/ContrastChecker/index.tsx","utils/debounce/index.ts","components/APCADemo/index.tsx","components/RatioDemo/index.tsx","components/ProteanTabPane/index.tsx","components/ProteanCheckbox/index.tsx","components/ProteanTabContainer/index.tsx","utils/legacy-ratio/index.ts","utils/apca-contrast/index.ts","components/App/index.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","APCARating","comparisonValue","value","percentageDiff","Math","abs","normalizedDiff","floor","Map","get","LookupTableCell","Component","decorator","this","props","includes","undefined","isIncalculable","rating","render","tag","className","wrapperClasses","aria-label","ariaLabel","Array","fill","i","index","lookupTableItems","SampleText","backgroundColor","foregroundColor","text","fontSize","fontWeight","wrapperStyle","color","mainTextStyle","style","ProteanInput","elementRef","createRef","componentDidMount","bindProps","componentDidUpdate","input","current","children","ref","propsToCopy","entries","forEach","key","guid","createGuid","RadioButton","radioId","data-checked","checked","type","name","disabled","onChange","handleChange","htmlFor","viewBox","xmlns","focusable","aria-hidden","cx","cy","r","label","ContrastChecker","constructor","super","radioName","getRGBString","rgb","g","b","swapColors","fg","bg","onColorChange","cleanHex","colorObj","workingColor","substring","length","substr","setError","hexString","rgbString","hexNumber","isValid","colorVal","test","clearError","num","parseInt","values","cleanRGB","match","reduce","acc","item","Number","toString","padStart","push","msg","isHex","setState","backgroundErrors","foregroundErrors","state","onForegroundInput","event","detail","formattedValue","target","hexToRGB","debouncedColorInputHandler","onBackgroundInput","onColorInput","cleanColorObj","filteredCleanColorObj","activeColor","fn","threshold","timeout","args","clearTimeout","setTimeout","debounce","bind","onHexSwap","hex","format","inputFormat","errors","oninput","a11yLabel","contrastValue","toFixed","isAPCA","variant","onClick","a11y-label","APCADemo","href","rel","colSpan","row","rowIndex","cell","RatioDemo","getGradeText","grade3","grade45","grade7","ProteanTabPane","ProteanCheckbox","checkbox","ProteanTabContainer","tabContainer","luminance","multipliers","pow","legacyContrast","rgb1","rgb2","lum1","lum2","darkest","min","max","APCAContrast","background","Rbg","Gbg","Bbg","Rtxt","Gtxt","Btxt","mainTRC","Rco","Gco","Bco","blkThrs","loConThresh","loConFactor","loConOffset","Ybg","Ytxt","SAPC","outputContrast","App","onTabChange","localName","activeTab","onLightModeToggle","darkModeEnabled","localStorage","setItem","document","documentElement","classList","toggle","APCAContrastValue","legacyContrastRatio","getItem","remove","alignment","onchange","defineCustomElements","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbd4236a.chunk.js","sourcesContent":["var map = {\n\t\"./protean-button_11.entry.js\": [\n\t\t20,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","export default function APCARating(comparisonValue: number, value: number): number {\n    const percentageDiff = (Math.abs(comparisonValue) * 100) / value - 100;\n\n    if (percentageDiff >= 0) return 4;\n\n    const normalizedDiff = Math.floor(percentageDiff / 5) * 5;\n    const rangeMap = new Map<number, number>([\n        [0, 4],\n        [-5, 3],\n        [-10, 2],\n        [-15, 1],\n    ]);\n\n    return rangeMap.get(normalizedDiff) ?? 0;\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport './styles.scss';\n\nexport interface LookupTableCellProps {\n    value: string | number;\n    comparisonValue?: number;\n    decorator?: string;\n    rating?: number;\n    ariaLabel?: string;\n    tag: 'td' | 'th' | 'div';\n}\n\nexport default class LookupTableCell extends Component<LookupTableCellProps> {\n    get isIncalculable(): boolean {\n        const decorator = this.props.decorator;\n        return decorator\n            ? ['copyright', 'prohibited', 'header'].includes(decorator) ||\n                  (['caution', 'not-recommended'].includes(decorator) && this.props.value === 'N')\n            : this.props.comparisonValue === undefined || false;\n    }\n\n    get rating(): number {\n        if (this.isIncalculable) {\n            return 0;\n        }\n\n        if (this.props.rating) return this.props.rating;\n\n        return APCARating(this.props.comparisonValue!, this.props.value as number);\n    }\n\n    get wrapperClasses(): string {\n        const ratingClass = this.isIncalculable ? '' : ` rating-${this.rating}`;\n        return `lookup-table-cell${ratingClass} ${this.props.decorator || ''}`;\n    }\n\n    render() {\n        return (\n            <this.props.tag className={this.wrapperClasses}>\n                <div className=\"cell-content\">\n                    <div className=\"cell-info\">\n                        <div className=\"cell-value\" aria-label={this.props.ariaLabel}>\n                            {this.props.value}\n                        </div>\n                        {!this.isIncalculable && (\n                            <ul className=\"cell-rating\" aria-label={`WCAG 3.0 Rating ${this.rating}`}>\n                                {new Array(this.rating).fill(undefined).map((i, index) => (\n                                    <li key={index}></li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                </div>\n            </this.props.tag>\n        );\n    }\n}\n","export interface LookupTableItem {\n    value: string | number;\n    decorator?: string;\n    ariaLabel?: string;\n}\n\nexport const lookupTableItems: LookupTableItem[][] = [\n    [\n        {\n            value: '10px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '11px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '12px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 100,\n            decorator: 'caution',\n        },\n        {\n            value: 90,\n            decorator: 'caution',\n        },\n        {\n            value: 80,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '14px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 60,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '16px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n            decorator: 'caution',\n        },\n        {\n            value: 50,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '18px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '24px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '30px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n    ],\n    [\n        {\n            value: '36px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n    ],\n    [\n        {\n            value: '48px',\n            decorator: 'header',\n        },\n        {\n            value: 100,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '60px',\n            decorator: 'header',\n        },\n        {\n            value: 90,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '72px',\n            decorator: 'header',\n        },\n        {\n            value: 80,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '96px',\n            decorator: 'header',\n        },\n        {\n            value: 70,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '120px',\n            decorator: 'header',\n        },\n        {\n            value: 60,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n];\n","import { Component } from 'react';\nimport './styles.scss';\n\nexport interface SampleTextProps {\n    foregroundColor: string;\n    backgroundColor: string;\n    fontSize: string;\n    fontWeight: number;\n    text: string;\n    rating?: number;\n}\n\nexport default class SampleText extends Component<SampleTextProps> {\n    render() {\n        const { backgroundColor, foregroundColor, text, fontSize, fontWeight, rating } = this.props;\n\n        const wrapperStyle = {\n            backgroundColor,\n            color: foregroundColor,\n        };\n\n        const mainTextStyle = {\n            fontSize,\n            fontWeight,\n        };\n\n        return (\n            <div className=\"sample-text\" style={wrapperStyle}>\n                <div className=\"main-text\" style={mainTextStyle}>\n                    {text}\n                </div>\n                {rating !== undefined && (\n                    <div className=\"rating-text\">\n                        Rating: <strong>{rating}</strong>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanInput extends Component<IProteanInput> {\n    elementRef: RefObject<IProteanInput> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const input = this.elementRef?.current as IProteanInput & IDict;\n\n        if (input) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                input[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-input ref={this.elementRef}></protean-input>;\n    }\n}\n","let guid = 1000;\nexport default function createGuid(): number {\n    return guid++;\n}\n","import { Component, ChangeEvent } from 'react';\nimport createGuid from '../../utils/guid/';\nimport './styles.scss';\n\nexport interface RadioButtonProps {\n    checked: boolean;\n    label: string;\n    name: string;\n    value: string;\n    disabled?: boolean;\n    handleChange: (event: ChangeEvent) => void;\n}\n\nexport default class RadioButton extends Component<RadioButtonProps> {\n    radioId: string = `radio-button-${createGuid()}`;\n\n    render() {\n        return (\n            <div className=\"radio-button\" data-checked={this.props.checked}>\n                <input\n                    className=\"sr\"\n                    type=\"radio\"\n                    id={this.radioId}\n                    name={this.props.name}\n                    value={this.props.value}\n                    disabled={this.props.disabled ?? false}\n                    checked={this.props.checked}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor={this.radioId}>\n                    <svg\n                        className=\"radio-symbol\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        focusable=\"false\"\n                        aria-hidden=\"true\"\n                    >\n                        <circle className=\"radio-outer\" cx=\"12\" cy=\"12\" r=\"11\" />\n                        {this.props.checked && <circle className=\"radio-inner\" cx=\"12\" cy=\"12\" r=\"6\" />}\n                    </svg>\n                    <span className=\"label-text\">{this.props.label}</span>\n                </label>\n            </div>\n        );\n    }\n}\n","import { Component, ChangeEvent } from 'react';\nimport ProteanInput from '../ProteanInput';\nimport RadioButton from '../RadioButton';\nimport SampleText from '../SampleText';\nimport debounce from '../../utils/debounce/';\nimport createGuid from '../../utils/guid';\nimport './styles.scss';\n\nexport interface ContrastCheckerProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    isAPCA: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ninterface ContrastCheckerState {\n    foregroundErrors?: string[];\n    backgroundErrors?: string[];\n}\n\ninterface CleanColor {\n    hexString: string;\n    rgbString: string;\n    hexNumber: number;\n    rgb: number[];\n    isValid: boolean;\n}\n\nexport default class ContrastChecker extends Component<ContrastCheckerProps, ContrastCheckerState> {\n    constructor(props: ContrastCheckerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    radioName: string = `color-type-${createGuid()}`;\n\n    get inputFormat(): 'hex' | 'rgb' {\n        return this.props.isHex ? 'hex' : 'rgb';\n    }\n\n    getRGBString = (rgb: number[]): string => {\n        const [r, g, b] = rgb;\n        return `rgb(${r}, ${g}, ${b})`;\n    };\n\n    hexToRGB(hex: string): string {\n        const r = parseInt(hex.substr(1, 2), 16);\n        const g = parseInt(hex.substr(3, 2), 16);\n        const b = parseInt(hex.substr(5, 2), 16);\n        return `rgb(${r}, ${g}, ${b})`;\n    }\n\n    swapColors = (): void => {\n        const fg = { ...this.props.backgroundColor };\n        const bg = { ...this.props.foregroundColor };\n\n        this.props.onColorChange(fg, bg);\n    };\n\n    cleanHex = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        let workingColor = color.substring(1);\n        let colorObj: {\n            r: string;\n            g: string;\n            b: string;\n            [key: string]: string;\n        };\n\n        switch (workingColor.length) {\n            case 1:\n                colorObj = {\n                    r: workingColor + workingColor,\n                    g: workingColor + workingColor,\n                    b: workingColor + workingColor,\n                };\n                break;\n            case 2:\n                colorObj = {\n                    r: workingColor,\n                    g: workingColor,\n                    b: workingColor,\n                };\n                break;\n            case 3:\n                colorObj = {\n                    r: workingColor.substr(0, 1) + workingColor.substr(0, 1),\n                    g: workingColor.substr(1, 1) + workingColor.substr(1, 1),\n                    b: workingColor.substr(2, 1) + workingColor.substr(2, 1),\n                };\n                break;\n            case 6:\n                colorObj = {\n                    r: workingColor.substr(0, 2),\n                    g: workingColor.substr(2, 2),\n                    b: workingColor.substr(4, 2),\n                };\n                break;\n            default:\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n        }\n\n        for (const colorVal in colorObj!) {\n            if (!/^[0-9A-F]{2}$/i.test(colorObj[colorVal])) {\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n            }\n        }\n\n        this.clearError(type);\n        const { r, g, b }: IDict<number | string> = colorObj;\n        workingColor = r + g + b;\n\n        const rgb = [r, g, b].map((num) => parseInt(num, 16));\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor, 16),\n            rgb: Object.values(colorObj).map((num) => parseInt(num, 16)),\n            isValid: true,\n        };\n    };\n\n    cleanRGB = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        const regex = /rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g;\n\n        if (!regex.test(color)) {\n            this.setError(type);\n            return {\n                hexString: '',\n                rgbString: '',\n                hexNumber: 0,\n                rgb: [],\n                isValid: false,\n            };\n        }\n\n        const { workingColor, isValid, rgb } = color\n            .match(/\\d{1,3}/g)\n            ?.reduce<{ workingColor: string; isValid: boolean; rgb: number[] }>(\n                (acc, item) => {\n                    let num = Number(item);\n                    if (num > 255) {\n                        this.setError(type);\n                        acc.isValid = false;\n                    }\n\n                    acc.workingColor += num.toString(16).padStart(2, '0');\n                    acc.rgb.push(num);\n\n                    return acc;\n                },\n                { workingColor: '', isValid: true, rgb: [] }\n            )!;\n\n        if (isValid) {\n            this.clearError(type);\n        }\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor!, 16),\n            rgb,\n            isValid,\n        };\n    };\n\n    setError = (type: 'foreground' | 'background'): void => {\n        const formatStr = this.props.isHex ? 'hex' : 'rgb';\n        const msg = [`Please enter a valid ${formatStr} color code`];\n\n        if (type === 'foreground') {\n            this.setState({ foregroundErrors: msg });\n            return;\n        }\n\n        this.setState({ backgroundErrors: msg });\n    };\n\n    clearError = (type: 'foreground' | 'background'): void => {\n        if (type === 'foreground' && !!this.state.foregroundErrors) {\n            this.setState({ foregroundErrors: undefined });\n            return;\n        }\n\n        !!this.state.backgroundErrors && this.setState({ backgroundErrors: undefined });\n    };\n\n    onForegroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'foreground');\n    };\n\n    onBackgroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'background');\n    };\n\n    onColorInput = (color: string, type: 'foreground' | 'background') => {\n        let fg = { ...this.props.foregroundColor };\n        let bg = { ...this.props.backgroundColor };\n        let cleanColorObj: CleanColor;\n\n        if (this.props.isHex) {\n            cleanColorObj = this.cleanHex(color, type);\n        } else {\n            cleanColorObj = this.cleanRGB(color, type);\n        }\n\n        let { isValid, ...filteredCleanColorObj } = cleanColorObj;\n        if (type === 'foreground') {\n            fg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        } else {\n            bg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        }\n\n        if (isValid) {\n            this.props.onColorChange(fg, bg);\n        }\n    };\n\n    debouncedColorInputHandler = debounce(this.onColorInput.bind(this), 5);\n\n    onHexSwap = (event: ChangeEvent) => {\n        const isHex = (event.target as HTMLInputElement).value === 'hex';\n\n        this.props.onHexSwap(isHex);\n    };\n\n    render() {\n        return (\n            <section className=\"contrast-checker\">\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Text color\"\n                            type=\"color-code\"\n                            className=\"foreground-input\"\n                            format={this.inputFormat}\n                            value={this.props.foregroundColor.activeColor}\n                            errors={this.state.foregroundErrors}\n                            oninput={this.onForegroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Text color\"\n                            className=\"foreground-color-input\"\n                            value={this.props.foregroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onForegroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.foregroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.foregroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"contrast-value\">\n                    <div>Contrast value</div>\n                    <h2>\n                        {this.props.contrastValue.toFixed(3)}\n                        {this.props.isAPCA ? (\n                            <span>\n                                {' '}\n                                L<sup>c</sup>\n                            </span>\n                        ) : (\n                            <span>:1</span>\n                        )}\n                    </h2>\n                    <protean-button variant=\"icon\" onClick={this.swapColors} a11y-label=\"Swap colors\">\n                        <protean-icon type=\"swap\"></protean-icon>\n                    </protean-button>\n                </div>\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Background color\"\n                            value={this.props.backgroundColor.activeColor}\n                            className=\"background-input\"\n                            type=\"color-code\"\n                            format={this.inputFormat}\n                            errors={this.state.backgroundErrors}\n                            oninput={this.onBackgroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Background color\"\n                            className=\"background-color-input\"\n                            value={this.props.backgroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onBackgroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.backgroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.backgroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"radio-list\">\n                    <RadioButton\n                        value=\"rgb\"\n                        label=\"Use RGB\"\n                        name={this.radioName}\n                        checked={!this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                    <RadioButton\n                        value=\"hex\"\n                        label=\"Use Hex\"\n                        name={this.radioName}\n                        checked={this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                </div>\n                <div className=\"sample-container\">\n                    <SampleText\n                        fontSize=\"16px\"\n                        fontWeight={600}\n                        text=\"Sample text\"\n                        foregroundColor={this.props.foregroundColor.hexString}\n                        backgroundColor={this.props.backgroundColor.hexString}\n                    />\n                </div>\n            </section>\n        );\n    }\n}\n","export default function debounce<T extends Parameters<any>>(\n    fn: (...args: T) => void,\n    threshold = 100\n): (...args: T) => void {\n    let timeout: NodeJS.Timeout;\n\n    return function (...args: T): void {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...args), threshold);\n    };\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport LookupTableCell from '../LookupTableCell';\nimport { lookupTableItems } from './static';\nimport './styles.scss';\nimport SampleText from '../SampleText';\nimport ContrastChecker from '../ContrastChecker';\n\nexport interface APCADemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\nexport default class APCADemo extends Component<APCADemoProps> {\n    render() {\n        return (\n            <div className=\"apca-demo\">\n                <ContrastChecker\n                    isAPCA={true}\n                    foregroundColor={this.props.foregroundColor}\n                    backgroundColor={this.props.backgroundColor}\n                    contrastValue={this.props.contrastValue}\n                    isHex={this.props.isHex}\n                    onColorChange={this.props.onColorChange}\n                    onHexSwap={this.props.onHexSwap}\n                />\n                <section>\n                    <h2>Color contrast in WCAG 3.0</h2>\n                    <p>\n                        Color contrast value in WCAG 3.0 is calculated using the{' '}\n                        <a href=\"https://www.myndex.com/APCA/\" rel=\"noreferrer\" target=\"_blank\">\n                            Advanced Perception of Color Algorithm (APCA)\n                        </a>\n                        . Unlike previous contrast calculations, the APCA considers the context in which colors are used\n                        to determine their readability. The font size, font weight, and sequence of background and text\n                        colors all impact the final WCAG rating.\n                    </p>\n                    <p>\n                        WCAG 3.0 ratings for text contrast are based on the proximity of a calculated contrast value (L\n                        <sup>c</sup>) to its target score on the APCA Lookup Table below.\n                    </p>\n                    <section>\n                        <h3>APCA Lookup Table</h3>\n                        <div className=\"lookup-table-wrapper\">\n                            <table className=\"lookup-table\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th colSpan={9} className=\"lookup-table-weight-header\">\n                                            <strong>Font weight</strong>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <th aria-label=\"Font size\"></th>\n                                        <th aria-label=\"Font weight 100\">100</th>\n                                        <th aria-label=\"Font weight 200\">200</th>\n                                        <th aria-label=\"Font weight 300\">300</th>\n                                        <th aria-label=\"Font weight 400\">400</th>\n                                        <th aria-label=\"Font weight 500\">500</th>\n                                        <th aria-label=\"Font weight 600\">600</th>\n                                        <th aria-label=\"Font weight 700\">700</th>\n                                        <th aria-label=\"Font weight 800\">800</th>\n                                        <th aria-label=\"Font weight 900\">900</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {lookupTableItems.map((row, rowIndex) => (\n                                        <tr key={`lookup-table-row-${rowIndex}`}>\n                                            {row.map((cell, index) => {\n                                                const tag = index === 0 ? 'th' : 'td';\n                                                return (\n                                                    <LookupTableCell\n                                                        tag={tag}\n                                                        value={cell.value}\n                                                        decorator={cell.decorator}\n                                                        comparisonValue={this.props.contrastValue}\n                                                        key={`lookup-table-cell-${rowIndex}-${index}`}\n                                                    />\n                                                );\n                                            })}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <section className=\"lookup-table-key\">\n                                <h4>Table key</h4>\n                                <ul className=\"lookup-table-key-list\">\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={4} tag=\"div\" comparisonValue={0} />\n                                        <div>\n                                            WCAG 3.0 Rating 4 - meets or exceeds the values on the APCA Lookup table\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={3} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 3 - 1-4% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={2} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 2 - 5-9% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={1} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 1 - 10-15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={0} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 0 - &gt;15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"caution\" />\n                                        <div>Not recommended for blocks of text</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"not-recommended\" />\n                                        <div>Font weight 100 should be avoided</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"X\" decorator=\"prohibited\" tag=\"div\" />\n                                        <div>Prohibited except for decorative purposes</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"©\" decorator=\"copyright\" tag=\"div\" />\n                                        <div>Use for copyright/by-line only</div>\n                                    </li>\n                                </ul>\n                            </section>\n                        </div>\n                    </section>\n                </section>\n                <section>\n                    <h2>Example font combinations & ratings</h2>\n                    <div className=\"sample-container\">\n                        <SampleText\n                            fontSize=\"14px\"\n                            fontWeight={400}\n                            text=\"14px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 100)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={400}\n                            text=\"16px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 90)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={600}\n                            text=\"16px/600\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 60)}\n                        />\n                        <SampleText\n                            fontSize=\"24px\"\n                            fontWeight={500}\n                            text=\"24px/500\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 55)}\n                        />\n                        <SampleText\n                            fontSize=\"30px\"\n                            fontWeight={300}\n                            text=\"30px/300\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 70)}\n                        />\n                    </div>\n                </section>\n                <hr />\n                <section>\n                    <h2>Attributions</h2>\n                    <p>\n                        SAPC & APCA were invented / developed by Andrew Somers, Senior Color Science Researcher at\n                        Myndex Technologies as part of the ongoing PerceptEx™ Perception Research Project.\n                    </p>\n\n                    <p>SAPC: S-LUV Advanced Perceptual Color — an appearance model for self-illuminated displays</p>\n\n                    <p>\n                        APCA: Advanced Perceptual Contrast Algorithm — a method for determining contrast to guide\n                        web-based design.\n                    </p>\n\n                    <p>\n                        APCA is derived from the SAPC model. APCA is a method for prediction pf suprathreshold visual\n                        contrast of text on displays. APCA results are intended to provide design guidance for best\n                        readability of web-based content.\n                    </p>\n                    <section>\n                        <h3>APCA DISCLAIMER</h3>\n\n                        <p>\n                            APCA is intended solely for web-based content per the W3 WCAG 3.0 standards, and the\n                            web-content version is licensed to the W3 per their cooperative agreement. Use for\n                            other-than web-based-content is restricted and/or prohibited. APCA is a public beta, under\n                            active development. Prior written authorization is required for the use of SAPC or APCA in\n                            the context of, or in applications for, transportation, aerospace, medical, military, or\n                            where human safety is involved.\n                        </p>\n                    </section>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\nimport ContrastChecker from '../ContrastChecker';\nimport './styles.scss';\n\nexport interface RatioDemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ntype RatioGradeText = 'pass' | 'fail';\n\nexport default class RatioDemo extends Component<RatioDemoProps> {\n    getGradeText(threshold: number): RatioGradeText {\n        return this.props.contrastValue < threshold ? 'fail' : 'pass';\n    }\n\n    render() {\n        const grade3 = this.getGradeText(3);\n        const grade45 = this.getGradeText(4.5);\n        const grade7 = this.getGradeText(7);\n\n        return (\n            <div className=\"ratio-demo\">\n                <section>\n                    <ContrastChecker\n                        foregroundColor={this.props.foregroundColor}\n                        backgroundColor={this.props.backgroundColor}\n                        contrastValue={this.props.contrastValue}\n                        isAPCA={false}\n                        isHex={this.props.isHex}\n                        onColorChange={this.props.onColorChange}\n                        onHexSwap={this.props.onHexSwap}\n                    />\n                </section>\n                <section>\n                    <h2>Normal text</h2>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"normal-aa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"normal-aaa-grade\">\n                            <span className={grade7}>{grade7}</span>\n                        </dd>\n                    </dl>\n                </section>\n                <section>\n                    <h2>Large text</h2>\n                    <p>\n                        Text that is 14pt (18.67px) and bold or any text bigger than 18pt (24px) is defined as large\n                        scale text.\n                    </p>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"large-aa-grade\">\n                            <span className={grade3}>{grade3}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"large-aaa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                    </dl>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\n\nclass ProteanTabPane extends Component<IProteanTabPane> {\n    render() {\n        return (\n            <protean-tab-pane label={this.props.label} value={this.props.value} name={this.props.name}>\n                {this.props.children}\n            </protean-tab-pane>\n        );\n    }\n}\n\nexport default ProteanTabPane;\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanCheckbox extends Component<IProteanCheckbox> {\n    elementRef: RefObject<IProteanCheckbox> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const checkbox = this.elementRef?.current as IProteanCheckbox & IDict;\n\n        if (checkbox) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                checkbox[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-checkbox ref={this.elementRef}></protean-checkbox>;\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanTabContainer extends Component<IProteanTabContainer> {\n    elementRef: RefObject<IProteanTabContainer> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const tabContainer = this.elementRef?.current as IProteanTabContainer & IDict;\n\n        if (tabContainer) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                tabContainer[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-tab-container ref={this.elementRef}>{this.props.children}</protean-tab-container>;\n    }\n}\n","export function luminance(rgb: number[]) {\n    const multipliers = [0.2126, 0.7152, 0.0722];\n    return rgb.reduce((acc, item, index) => {\n        let num = item / 255;\n        num = num <= 0.03928 ? num / 12.92 : Math.pow((num + 0.055) / 1.055, 2.4);\n\n        acc += num * multipliers[index];\n        return acc;\n    }, 0);\n}\n\nexport default function legacyContrast(rgb1: number[], rgb2: number[]) {\n    const lum1 = luminance(rgb1);\n    const lum2 = luminance(rgb2);\n\n    const darkest = Math.min(lum1, lum2);\n    const brightest = Math.max(lum1, lum2);\n\n    return (brightest + 0.05) / (darkest + 0.05);\n}\n","////////////////////////////////////////////////////////////////////////////////\n/** @preserve\n/////                *** APCA VERSION for W3 and WCAG 3 ***\n/////\n/////   SAPC - S-Luv Advanced Perceptual Contrast - Beta Algorithm 0.98e_d12e\n/////                *** With the NEW SmoothScale extension ***\n/////              *** Optimized for the Font Select Extension ***\n/////\n/////   Functions to parse color values and determine SAPC/APCA contrast\n/////   Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.\n/////   LICENSE: GNU AGPL v3  https://www.gnu.org/licenses/\n/////   CONTACT: For SAPC/APCA Please use the ISSUES tab at:\n/////   https://github.com/Myndex/SAPC-APCA/\n// */\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////                        SAPC Method and APCA Algorithm\n/////          •••• Version 0.98e_d12e with SmoothScale™ by Andrew Somers ••••\n/////\n/////   GITHUB: https://github.com/Myndex/SAPC-APCA\n/////   DEVELOPER SITE: https://www.myndex.com/WEB/Perception\n/////\n/////   Thanks To:\n/////   • This project references the research and work of Dr.Legge, Dr.Arditi,\n/////     Dr.Lovie-Kitchin, M.Fairchild, R.Hunt, M.Stone, Dr.Poynton, L.Arend, &\n/////     many others — see refs at https://www.myndex.com/WEB/WCAG_CE17polarity\n/////   • Stoyan Stefanov for his input parsing idea, Twitter @stoyanstefanov\n/////   • Bruce Bailey of USAccessBoard for his encouragement, ideas, & feedback\n/////   • Chris Loiselle of Oracle for getting us back on track in a pandemic\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////   *****  SAPC BLOCK  *****\n/////\n/////   For Evaluations, this is referred to as: SAPC-8, D-series constants\n/////                S-LUV Advanced Perceptual Contrast\n/////   Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.\n/////\n/////\n/////   INCLUDED Extensions or Model Features:\n/////       • SAPC-8 Core Contrast\n/////       • SmoothScale™ scaling technique\n/////       • SoftToe black level soft clamp\n/////\n/////   NOT INCLUDED — This Version Does NOT Have These Extensions:\n/////       • Color Vision Module\n/////       • Spatial Frequency Module\n/////       • Light Adaptation Module\n/////       • Dynamics Module\n/////       • Alpha Module\n/////       • Personalization Module\n/////       • Multiway Module\n/////       • DynaFont™ font display\n/////       • ResearchMode middle contrast explorer\n/////       • ResearchMode static target\n/////       • CIE function suite\n/////       • SAPColor listings and sorting suite\n/////       • RGBcolor() colorString parsing\n/////\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n/////  BEGIN SAPC/APCA CONTRAST BLOCK  \\//////////////////////////////////////\n////                                    \\////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n///// SAPC Function with SmoothScale  \\////////////////////////////////////\n////                                   \\//////////////////////////////////\n///\n\n///// *** Polarity is Important: do not mix up background and text *** /////\n\n/////  Input value must be integer in RGB order (RRGGBB for 0xFFFFFF)  /////\n\n/////  DO NOT use a Y from any other method  /////\n\nexport default function APCAContrast(background: number, text: number) {\n    let Rbg = (background & 0xff0000) >> 16;\n    let Gbg = (background & 0x00ff00) >> 8;\n    let Bbg = background & 0x0000ff;\n\n    let Rtxt = (text & 0xff0000) >> 16,\n        Gtxt = (text & 0x00ff00) >> 8,\n        Btxt = text & 0x0000ff;\n\n    /////  MAGICAL NUMBERS  ///////////////////////////////\n\n    /////  sRGB Conversion to Relative Luminance (Y)  /////\n\n    const mainTRC = 2.4; // Transfer Curve (aka \"Gamma\") for sRGB linearization\n    // Simple power curve vs piecewise described in docs\n    // Essentially, 2.4 best models actual display\n    // characteristics in combination with the total method\n\n    // const mainTRCencode = 0.41666666666666666667; // = 1.0/mainTRC;\n\n    const Rco = 0.2126729, // sRGB Red Coefficient (from matrix)\n        Gco = 0.7151522, // sRGB Green Coefficient (from matrix)\n        Bco = 0.072175; // sRGB Blue Coefficient (from matrix)\n\n    /////  For Finding Raw SAPC Contrast from Relative Luminance (Y)  /////\n\n    const normBG = 0.56, // Constants for SAPC Power Curve Exponents\n        normTXT = 0.57, // One pair for normal text, and one for reverse\n        revTXT = 0.62, // These are the \"beating heart\" of SAPC\n        revBG = 0.65;\n\n    /////  For Clamping and Scaling Values  /////\n\n    const blkThrs = 0.022, // Level that triggers the soft black clamp\n        blkClmp = 1.414, // Exponent for the soft black clamp curve\n        deltaYmin = 0.0005, // Lint trap\n        scaleBoW = 1.14, // Scaling for dark text on light\n        scaleWoB = 1.14, // Scaling for light text on dark\n        loConThresh = 0.035991, // Threshold for new simple offset scale\n        loConFactor = 27.7847239587675, // = 1/0.078,\n        loConOffset = 0.027, // The simple offset\n        loClip = 0.001; // Output clip (lint trap #2)\n\n    // We are only concerned with Y at this point\n    // Ybg and Ytxt: divide sRGB to 0.0-1.0 range, linearize,\n    // and then apply the standard coefficients and sum to Y.\n    // Note that the Y we create here is unique and designed\n    // exclusively for SAPC. Do not use Y from other methods.\n\n    let Ybg =\n        Math.pow(Rbg / 255.0, mainTRC) * Rco +\n        Math.pow(Gbg / 255.0, mainTRC) * Gco +\n        Math.pow(Bbg / 255.0, mainTRC) * Bco;\n\n    let Ytxt =\n        Math.pow(Rtxt / 255.0, mainTRC) * Rco +\n        Math.pow(Gtxt / 255.0, mainTRC) * Gco +\n        Math.pow(Btxt / 255.0, mainTRC) * Bco;\n\n    let SAPC = 0.0; // For holding raw SAPC values\n    let outputContrast = 0.0; // For weighted final values\n\n    ///// TUTORIAL  /////\n\n    // Take Y and soft clamp black, return 0 for very close luminances\n    // determine polarity, and calculate SAPC raw contrast\n    // Then apply the output scaling\n\n    // Note that reverse contrast (white text on black)\n    // intentionally returns a negative number\n    // Proper polarity is important!\n\n    //////////   BLACK SOFT CLAMP & INPUT CLIP  ////////////////////////////////\n\n    // Soft clamp Y when near black.\n    // Now clamping all colors to prevent crossover errors\n    Ytxt = Ytxt > blkThrs ? Ytxt : Ytxt + Math.pow(blkThrs - Ytxt, blkClmp);\n\n    Ybg = Ybg > blkThrs ? Ybg : Ybg + Math.pow(blkThrs - Ybg, blkClmp);\n\n    /////   Return 0 Early for extremely low ∆Y (lint trap #1) /////\n    if (Math.abs(Ybg - Ytxt) < deltaYmin) {\n        return 0.0;\n    }\n\n    //////////   SAPC CONTRAST   ///////////////////////////////////////////////\n\n    if (Ybg > Ytxt) {\n        // For normal polarity, black text on white\n\n        ///// Calculate the SAPC contrast value and scale\n\n        SAPC = (Math.pow(Ybg, normBG) - Math.pow(Ytxt, normTXT)) * scaleBoW;\n\n        ///// NEW! SAPC SmoothScale™\n        // Low Contrast Smooth Scale Rollout to prevent polarity reversal\n        // and also a low clip for very low contrasts (lint trap #2)\n        // much of this is for very low contrasts, less than 10\n        // therefore for most reversing needs, only loConOffset is important\n        outputContrast =\n            SAPC < loClip ? 0.0 : SAPC < loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC - loConOffset;\n    } else {\n        // For reverse polarity, light text on dark\n        // WoB should always return negative value.\n\n        SAPC = (Math.pow(Ybg, revBG) - Math.pow(Ytxt, revTXT)) * scaleWoB;\n\n        outputContrast =\n            SAPC > -loClip ? 0.0 : SAPC > -loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC + loConOffset;\n    }\n\n    return outputContrast * 100;\n} // Close APCAcontrast()\n\n////\\                            ///////////////////////////////////////////\\\n/////\\  END OF SAPC/APCA BLOCK  /////////////////////////////////////////////\\\n//////////////////////////////////////////////////////////////////////////////\\\n///////////////////////////////////////////////////////////////////////////////\\\n","import { Component } from 'react';\nimport './styles.scss';\nimport APCADemo from '../APCADemo';\nimport RatioDemo from '../RatioDemo';\nimport ProteanTabPane from '../ProteanTabPane';\nimport ProteanCheckbox from '../ProteanCheckbox';\nimport ProteanTabContainer from '../ProteanTabContainer';\nimport legacyContrast from '../../utils/legacy-ratio';\nimport APCAContrast from '../../utils/apca-contrast';\n\ninterface AppState {\n    activeTab: string;\n    darkModeEnabled: boolean;\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    APCAContrastValue: number;\n    legacyContrastRatio: number;\n    isHex: boolean;\n}\n\nexport default class App extends Component<{}, AppState> {\n    constructor(props: {}) {\n        super(props);\n\n        const darkModeEnabled = localStorage.getItem('darkModeEnabled') === 'true';\n        if (darkModeEnabled) {\n            document.documentElement.classList.remove('light');\n        }\n\n        const foregroundColor = {\n            hexString: '#1a1a1a',\n            rgbString: 'rgb(26, 26, 26)',\n            activeColor: '#1a1a1a',\n            hexNumber: parseInt('1a1a1a', 16),\n            rgb: [26, 26, 26],\n        };\n\n        const backgroundColor = {\n            hexString: '#c7b5fb',\n            rgbString: 'rgb(199, 181, 251)',\n            activeColor: '#c7b5fb',\n            hexNumber: parseInt('c7b5fb', 16),\n            rgb: [199, 181, 251],\n        };\n\n        this.state = {\n            activeTab: 'wcag-30',\n            darkModeEnabled,\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue: APCAContrast(backgroundColor.hexNumber, foregroundColor.hexNumber),\n            legacyContrastRatio: legacyContrast(foregroundColor.rgb, backgroundColor.rgb),\n            isHex: true,\n        };\n    }\n\n    onTabChange = (event: CustomEvent) => {\n        if ((event.target as HTMLElement).localName !== 'protean-tab-container') return;\n\n        this.setState({ activeTab: event.detail.value });\n    };\n\n    onLightModeToggle = (event: CustomEvent) => {\n        const darkModeEnabled = event.detail.checked;\n        localStorage.setItem('darkModeEnabled', darkModeEnabled);\n        this.setState({ darkModeEnabled });\n        document.documentElement.classList.toggle('light');\n    };\n\n    onColorChange = (foregroundColor: IColorData, backgroundColor: IColorData) => {\n        const APCAContrastValue = APCAContrast(backgroundColor.hexNumber, foregroundColor.hexNumber);\n        const legacyContrastRatio = legacyContrast(foregroundColor.rgb, backgroundColor.rgb);\n\n        this.setState({\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue,\n            legacyContrastRatio,\n        });\n    };\n\n    onHexSwap = (isHex: boolean) => {\n        this.setState(({ foregroundColor, backgroundColor }) => {\n            return {\n                isHex,\n                foregroundColor: {\n                    ...foregroundColor,\n                    activeColor: isHex ? foregroundColor.hexString : foregroundColor.rgbString,\n                },\n                backgroundColor: {\n                    ...backgroundColor,\n                    activeColor: isHex ? backgroundColor.hexString : backgroundColor.rgbString,\n                },\n            };\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"app content\">\n                <div className=\"header-content\">\n                    <h1>\n                        Contrast <span className=\"hidden-s\">tools</span>\n                    </h1>\n                    <ProteanCheckbox\n                        className=\"dark-mode-toggle\"\n                        label=\"Dark mode\"\n                        variant=\"toggle\"\n                        alignment=\"right\"\n                        checked={this.state.darkModeEnabled}\n                        onchange={this.onLightModeToggle}\n                    />\n                </div>\n                <ProteanTabContainer value={this.state.activeTab} onchange={this.onTabChange}>\n                    <ProteanTabPane value=\"wcag-30\" label=\"WCAG 3.0\">\n                        <APCADemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.APCAContrastValue}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </ProteanTabPane>\n                    <protean-tab-pane value=\"wcag-21\" label=\"WCAG 2.1\">\n                        <RatioDemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.legacyContrastRatio}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </protean-tab-pane>\n                </ProteanTabContainer>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\nimport { defineCustomElements } from 'protean-elements/loader';\n\ndefineCustomElements();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}