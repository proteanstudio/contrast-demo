{"version":3,"sources":["../../design-system/packages/protean-elements/dist/esm/index-2dc39354.js","../../design-system/packages/protean-elements/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/apca-rating/index.ts","components/LookupTableCell/index.tsx","components/APCADemo/static.ts","components/SampleText/index.tsx","components/ProteanInput/index.tsx","utils/guid/index.ts","components/RadioButton/index.tsx","components/ContrastChecker/index.tsx","utils/debounce/index.ts","components/APCADemo/index.tsx","components/RatioDemo/index.tsx","components/ProteanTabPane/index.tsx","components/ProteanCheckbox/index.tsx","components/ProteanTabContainer/index.tsx","utils/legacy-ratio/index.ts","utils/apca-contrast/index.ts","components/App/index.tsx","../../design-system/packages/protean-elements/dist/esm/loader.js","../../design-system/packages/protean-elements/loader/index.js","index.tsx"],"names":["scopeId","hostTagName","isSvgMode","queuePending","win","window","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","replace","e","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","flags","name","method","target","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","push","methodName","ev","$lazyInstance$","$queuedListeners$","consoleError","XLINK_NS","rootAppliedStyles","WeakMap","attachStyles","cmpMeta","$cmpMeta$","$hostElement$","endAttachStyles","$tagName$","styleContainerNode","mode","hostElm","getScopeId","style","styles","get","nodeType","styleElm","appliedStyles","set","Set","has","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","addStyle","shadowRoot","getRootNode","classList","cmp","EMPTY_OBJ","isComplexType","o","nodeName","vnodeData","children","child","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","newVNode","classData","className","class","Object","keys","filter","k","join","vnode","$attrs$","$children$","tag","text","$tag$","$elm$","Host","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","isComplex","tagName","n","xlink","getAttribute","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","slice","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","createElementNS","appendChild","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","isSameVnode","vnode1","vnode2","patch","oldVNode","oldChildren","newChildren","oldCh","newCh","node","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","nextSibling","parentNode","updateChildren","textContent","data","renderVdom","renderFnResults","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","getElement","ref","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","isInitialLoad","$ancestorComponent$","writeTask","dispatchHooks","endSchedule","instance","promise","event","safeCall","then","updateComponent","async","endUpdate","rc","endRender","callRender","cb","childrenPromises","postUpdate","postUpdateComponent","all","render","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","nextTick","who","documentElement","namespace","arg","thenFn","setValue","newVal","oldVal","$instanceValues$","propValue","propType","$members$","parseFloat","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype","memberFlags","defineProperty","this","configurable","enumerable","attrNameToPropName","Map","attributeChangedCallback","attrName","_oldValue","observedAttributes","_","m","initializeComponent","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","fireConnectedCallback","endRegisterStyles","cssText","allowCS","registerStyle","schedule","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","lazyBundle","compactMeta","$listeners$","HostElement","HTMLElement","constructor","self","super","registerHost","attachShadow","connectedCallback","clearTimeout","endConnected","hasOwnProperty","disconnectedCallback","rmListener","componentOnReady","$onReadyPromise$","$lazyBundleId$","define","firstChild","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","webpackAsyncContext","req","__webpack_require__","Error","code","ids","id","exports","APCARating","comparisonValue","percentageDiff","Math","abs","normalizedDiff","floor","LookupTableCell","Component","props","decorator","isIncalculable","rating","wrapperClasses","aria-label","ariaLabel","fill","index","lookupTableItems","SampleText","backgroundColor","foregroundColor","fontSize","fontWeight","wrapperStyle","color","mainTextStyle","ProteanInput","elementRef","createRef","componentDidMount","bindProps","componentDidUpdate","input","current","propsToCopy","forEach","key","guid","createGuid","RadioButton","radioId","data-checked","checked","type","disabled","onChange","handleChange","htmlFor","viewBox","xmlns","focusable","aria-hidden","cx","cy","label","ContrastChecker","radioName","getRGBString","rgb","g","b","swapColors","fg","bg","onColorChange","cleanHex","colorObj","workingColor","substring","substr","setError","hexString","rgbString","hexNumber","isValid","colorVal","test","clearError","num","parseInt","values","cleanRGB","match","reduce","acc","item","Number","toString","padStart","msg","isHex","setState","backgroundErrors","foregroundErrors","state","onForegroundInput","formattedValue","hexToRGB","debouncedColorInputHandler","onBackgroundInput","onColorInput","cleanColorObj","filteredCleanColorObj","activeColor","fn","threshold","timeout","args","debounce","bind","onHexSwap","hex","format","inputFormat","errors","oninput","a11yLabel","contrastValue","toFixed","isAPCA","variant","onClick","a11y-label","APCADemo","colSpan","row","rowIndex","cell","RatioDemo","getGradeText","grade3","grade45","grade7","ProteanTabPane","ProteanCheckbox","checkbox","ProteanTabContainer","tabContainer","luminance","multipliers","pow","legacyContrast","rgb1","rgb2","lum1","lum2","darkest","min","max","APCAContrast","background","Rbg","Gbg","Bbg","Rtxt","Gtxt","Btxt","mainTRC","Rco","Gco","Bco","blkThrs","loConThresh","loConFactor","loConOffset","Ybg","Ytxt","SAPC","outputContrast","App","onTabChange","localName","activeTab","onLightModeToggle","darkModeEnabled","localStorage","setItem","toggle","APCAContrastValue","legacyContrastRatio","getItem","alignment","onchange","Reflect","a","construct","setPrototypeOf","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbae8e6e.chunk.js","sourcesContent":["const NAMESPACE = 'protean-elements';\n\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: h => h(),\n    raf: h => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets = /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof (new CSSStyleSheet()).replace === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (listeners) {\n        listeners.map(([flags, name, method]) => {\n            const target = elm;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        {\n            if (hostRef.$flags$ & 256 /* isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => (flags & 2 /* Capture */) !== 0;\nconst HYDRATED_CSS = '{visibility:hidden}[stencil-hydrated]{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId = getScopeId(cmpMeta);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (cmp.$tagName$);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter(k => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n        }\n        else if ((!isProp ) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        if (!isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$tag$)\n            );\n        if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    return elm;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (parentElm);\n    let childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, before);\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        return true;\n    }\n    return false;\n};\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if (text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if (cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst getElement = (ref) => (getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail,\n            });\n        },\n    };\n};\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise(r => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = hostRef.$lazyInstance$ ;\n    let promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        callRender(hostRef, instance);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(cb => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    try {\n        instance = instance.render && instance.render();\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n        {\n            {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                {\n                    renderVdom(hostRef, instance);\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    return null;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    {\n        safeCall(instance, 'componentDidRender');\n    }\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => (elm.setAttribute('stencil-hydrated', '') );\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 2 /* Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = hostRef.$hostElement$ ;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map(watchMethodName => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ((memberFlags & 31 /* Prop */ || ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if (m[0] & 512 /* ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if (!Cstr.isProxied) {\n                // we'eve never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            {\n                hostRef.$flags$ |= 128 /* isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        if (Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the intial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n            // fire off connectedCallback() on component instance\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const instance = hostRef.$lazyInstance$ ;\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map(rmListener => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        {\n            safeCall(instance, 'disconnectedCallback');\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map(lazyBundle => lazyBundle[1].map(compactMeta => {\n        const cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$listeners$ = compactMeta[3];\n        }\n        {\n            cmpMeta.$attrsToReflect$ = [];\n        }\n        {\n            cmpMeta.$watchers$ = {};\n        }\n        const tagName = cmpMeta.$tagName$;\n        const HostElement = class extends HTMLElement {\n            // StencilLazyHost\n            constructor(self) {\n                // @ts-ignore\n                super(self);\n                self = this;\n                registerHost(self, cmpMeta);\n                if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                }\n            }\n            connectedCallback() {\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(() => connectedCallback(this));\n                }\n            }\n            disconnectedCallback() {\n                plt.jmp(() => disconnectedCallback(this));\n            }\n            componentOnReady() {\n                return getHostRef(this).$onReadyPromise$;\n            }\n        };\n        cmpMeta.$lazyBundleId$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }));\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(host => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise(r => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (0, console.error)(e, el);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module = cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${''}`).then(importedModule => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { bootstrapLazy as b, createEvent as c, getElement as g, h, promiseResolve as p, registerInstance as r };\n","var map = {\n\t\"./protean-button_11.entry.js\": [\n\t\t19,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 17;\nmodule.exports = webpackAsyncContext;","export default function APCARating(comparisonValue: number, value: number): number {\n    const percentageDiff = (Math.abs(comparisonValue) * 100) / value - 100;\n\n    if (percentageDiff >= 0) return 4;\n\n    const normalizedDiff = Math.floor(percentageDiff / 5) * 5;\n    const rangeMap = new Map<number, number>([\n        [0, 4],\n        [-5, 3],\n        [-10, 2],\n        [-15, 1],\n    ]);\n\n    return rangeMap.get(normalizedDiff) ?? 0;\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport './styles.scss';\n\nexport interface LookupTableCellProps {\n    value: string | number;\n    comparisonValue?: number;\n    decorator?: string;\n    rating?: number;\n    ariaLabel?: string;\n    tag: 'td' | 'th' | 'div';\n}\n\nexport default class LookupTableCell extends Component<LookupTableCellProps> {\n    get isIncalculable(): boolean {\n        return this.props.decorator\n            ? ['copyright', 'prohibited', 'header'].includes(this.props.decorator) ||\n                  (this.props.decorator === 'caution' && this.props.value === 'N')\n            : this.props.comparisonValue === undefined || false;\n    }\n\n    get rating(): number {\n        if (this.isIncalculable) {\n            return 0;\n        }\n\n        if (this.props.rating) return this.props.rating;\n\n        return APCARating(this.props.comparisonValue!, this.props.value as number);\n    }\n\n    get wrapperClasses(): string {\n        const ratingClass = this.isIncalculable ? '' : ` rating-${this.rating}`;\n        return `lookup-table-cell${ratingClass} ${this.props.decorator || ''}`;\n    }\n\n    render() {\n        return (\n            <this.props.tag className={this.wrapperClasses}>\n                <div className=\"cell-content\">\n                    <div className=\"cell-info\">\n                        <div className=\"cell-value\" aria-label={this.props.ariaLabel}>\n                            {this.props.value}\n                        </div>\n                        {!this.isIncalculable && (\n                            <ul className=\"cell-rating\" aria-label={`WCAG 3.0 Rating ${this.rating}`}>\n                                {new Array(this.rating).fill(undefined).map((i, index) => (\n                                    <li key={index}></li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                </div>\n            </this.props.tag>\n        );\n    }\n}\n","export interface LookupTableItem {\n    value: string | number;\n    decorator?: string;\n    ariaLabel?: string;\n}\n\nexport const lookupTableItems: LookupTableItem[][] = [\n    /* [\n            {\n                value: '',\n                ariaLabel: 'Font size',\n            },\n            {\n                value: '100',\n                ariaLabel: 'Font weight 100',\n            },\n            {\n                value: '200',\n                ariaLabel: 'Font weight 200',\n            },\n            {\n                value: '300',\n                ariaLabel: 'Font weight 300',\n            },\n            {\n                value: '400',\n                ariaLabel: 'Font weight 400',\n            },\n            {\n                value: '500',\n                ariaLabel: 'Font weight 500',\n            },\n            {\n                value: '600',\n                ariaLabel: 'Font weight 600',\n            },\n            {\n                value: '700',\n                ariaLabel: 'Font weight 700',\n            },\n            {\n                value: '800',\n                ariaLabel: 'Font weight 800',\n            },\n            {\n                value: '900',\n                ariaLabel: 'Font weight 900',\n            },\n        ], */\n    [\n        {\n            value: '10px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '11px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '12px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 100,\n            decorator: 'caution',\n        },\n        {\n            value: 90,\n            decorator: 'caution',\n        },\n        {\n            value: 80,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '14px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 60,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '16px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n            decorator: 'caution',\n        },\n        {\n            value: 50,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '18px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '24px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '30px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n    ],\n    [\n        {\n            value: '36px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n    ],\n    [\n        {\n            value: '48px',\n            decorator: 'header',\n        },\n        {\n            value: 100,\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '60px',\n            decorator: 'header',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 38,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '72px',\n            decorator: 'header',\n        },\n        {\n            value: 80,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '96px',\n            decorator: 'header',\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 35,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n    [\n        {\n            value: '120px',\n            decorator: 'header',\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 40,\n        },\n        {\n            value: 30,\n        },\n        {\n            value: 25,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n        {\n            value: 20,\n        },\n    ],\n];\n","import { Component } from 'react';\nimport './styles.scss';\n\nexport interface SampleTextProps {\n    foregroundColor: string;\n    backgroundColor: string;\n    fontSize: string;\n    fontWeight: number;\n    text: string;\n    rating?: number;\n}\n\nexport default class SampleText extends Component<SampleTextProps> {\n    render() {\n        const { backgroundColor, foregroundColor, text, fontSize, fontWeight, rating } = this.props;\n\n        const wrapperStyle = {\n            backgroundColor,\n            color: foregroundColor,\n        };\n\n        const mainTextStyle = {\n            fontSize,\n            fontWeight,\n        };\n\n        return (\n            <div className=\"sample-text\" style={wrapperStyle}>\n                <div className=\"main-text\" style={mainTextStyle}>\n                    {text}\n                </div>\n                {rating !== undefined && (\n                    <div className=\"rating-text\">\n                        Rating: <strong>{rating}</strong>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanInput extends Component<IProteanInput> {\n    elementRef: RefObject<IProteanInput> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const input = this.elementRef?.current as IProteanInput & IDict;\n\n        if (input) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                input[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-input ref={this.elementRef}></protean-input>;\n    }\n}\n","let guid = 1000;\nexport default function createGuid(): number {\n    return guid++;\n}\n","import { Component, ChangeEvent } from 'react';\nimport createGuid from '../../utils/guid/';\nimport './styles.scss';\n\nexport interface RadioButtonProps {\n    checked: boolean;\n    label: string;\n    name: string;\n    value: string;\n    disabled?: boolean;\n    handleChange: (event: ChangeEvent) => void;\n}\n\nexport default class RadioButton extends Component<RadioButtonProps> {\n    radioId: string = `radio-button-${createGuid()}`;\n\n    render() {\n        return (\n            <div className=\"radio-button\" data-checked={this.props.checked}>\n                <input\n                    className=\"sr\"\n                    type=\"radio\"\n                    id={this.radioId}\n                    name={this.props.name}\n                    value={this.props.value}\n                    disabled={this.props.disabled ?? false}\n                    checked={this.props.checked}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor={this.radioId}>\n                    <svg\n                        className=\"radio-symbol\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        focusable=\"false\"\n                        aria-hidden=\"true\"\n                    >\n                        <circle className=\"radio-outer\" cx=\"12\" cy=\"12\" r=\"11\" />\n                        {this.props.checked && <circle className=\"radio-inner\" cx=\"12\" cy=\"12\" r=\"6\" />}\n                    </svg>\n                    <span className=\"label-text\">{this.props.label}</span>\n                </label>\n            </div>\n        );\n    }\n}\n","import { Component, ChangeEvent } from 'react';\nimport ProteanInput from '../ProteanInput';\nimport RadioButton from '../RadioButton';\nimport SampleText from '../SampleText';\nimport debounce from '../../utils/debounce/';\nimport createGuid from '../../utils/guid';\nimport './styles.scss';\n\nexport interface ContrastCheckerProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    isAPCA: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ninterface ContrastCheckerState {\n    foregroundErrors?: string[];\n    backgroundErrors?: string[];\n}\n\ninterface CleanColor {\n    hexString: string;\n    rgbString: string;\n    hexNumber: number;\n    rgb: number[];\n    isValid: boolean;\n}\n\nexport default class ContrastChecker extends Component<ContrastCheckerProps, ContrastCheckerState> {\n    constructor(props: ContrastCheckerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    radioName: string = `color-type-${createGuid()}`;\n\n    get inputFormat(): 'hex' | 'rgb' {\n        return this.props.isHex ? 'hex' : 'rgb';\n    }\n\n    getRGBString = (rgb: number[]): string => {\n        const [r, g, b] = rgb;\n        return `rgb(${r}, ${g}, ${b})`;\n    };\n\n    hexToRGB(hex: string): string {\n        const r = parseInt(hex.substr(1, 2), 16);\n        const g = parseInt(hex.substr(3, 2), 16);\n        const b = parseInt(hex.substr(5, 2), 16);\n        return `rgb(${r}, ${g}, ${b})`;\n    }\n\n    swapColors = (): void => {\n        const fg = { ...this.props.backgroundColor };\n        const bg = { ...this.props.foregroundColor };\n\n        this.props.onColorChange(fg, bg);\n    };\n\n    cleanHex = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        let workingColor = color.substring(1);\n        let colorObj: {\n            r: string;\n            g: string;\n            b: string;\n            [key: string]: string;\n        };\n\n        switch (workingColor.length) {\n            case 1:\n                colorObj = {\n                    r: workingColor + workingColor,\n                    g: workingColor + workingColor,\n                    b: workingColor + workingColor,\n                };\n                break;\n            case 2:\n                colorObj = {\n                    r: workingColor,\n                    g: workingColor,\n                    b: workingColor,\n                };\n                break;\n            case 3:\n                colorObj = {\n                    r: workingColor.substr(0, 1) + workingColor.substr(0, 1),\n                    g: workingColor.substr(1, 1) + workingColor.substr(1, 1),\n                    b: workingColor.substr(2, 1) + workingColor.substr(2, 1),\n                };\n                break;\n            case 6:\n                colorObj = {\n                    r: workingColor.substr(0, 2),\n                    g: workingColor.substr(2, 2),\n                    b: workingColor.substr(4, 2),\n                };\n                break;\n            default:\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n        }\n\n        for (const colorVal in colorObj!) {\n            if (!/^[0-9A-F]{2}$/i.test(colorObj[colorVal])) {\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n            }\n        }\n\n        this.clearError(type);\n        const { r, g, b }: IDict<number | string> = colorObj;\n        workingColor = r + g + b;\n\n        const rgb = [r, g, b].map((num) => parseInt(num, 16));\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor, 16),\n            rgb: Object.values(colorObj).map((num) => parseInt(num, 16)),\n            isValid: true,\n        };\n    };\n\n    cleanRGB = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        const regex = /rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g;\n\n        if (!regex.test(color)) {\n            this.setError(type);\n            return {\n                hexString: '',\n                rgbString: '',\n                hexNumber: 0,\n                rgb: [],\n                isValid: false,\n            };\n        }\n\n        const { workingColor, isValid, rgb } = color\n            .match(/\\d{1,3}/g)\n            ?.reduce<{ workingColor: string; isValid: boolean; rgb: number[] }>(\n                (acc, item) => {\n                    let num = Number(item);\n                    if (num > 255) {\n                        this.setError(type);\n                        acc.isValid = false;\n                    }\n\n                    acc.workingColor += num.toString(16).padStart(2, '0');\n                    acc.rgb.push(num);\n\n                    return acc;\n                },\n                { workingColor: '', isValid: true, rgb: [] }\n            )!;\n\n        if (isValid) {\n            this.clearError(type);\n        }\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor!, 16),\n            rgb,\n            isValid,\n        };\n    };\n\n    setError = (type: 'foreground' | 'background'): void => {\n        const formatStr = this.props.isHex ? 'hex' : 'rgb';\n        const msg = [`Please enter a valid ${formatStr} color code`];\n\n        if (type === 'foreground') {\n            this.setState({ foregroundErrors: msg });\n            return;\n        }\n\n        this.setState({ backgroundErrors: msg });\n    };\n\n    clearError = (type: 'foreground' | 'background'): void => {\n        if (type === 'foreground' && !!this.state.foregroundErrors) {\n            this.setState({ foregroundErrors: undefined });\n            return;\n        }\n\n        !!this.state.backgroundErrors && this.setState({ backgroundErrors: undefined });\n    };\n\n    onForegroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'foreground');\n    };\n\n    onBackgroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'background');\n    };\n\n    onColorInput = (color: string, type: 'foreground' | 'background') => {\n        let fg = { ...this.props.foregroundColor };\n        let bg = { ...this.props.backgroundColor };\n        let cleanColorObj: CleanColor;\n\n        if (this.props.isHex) {\n            cleanColorObj = this.cleanHex(color, type);\n        } else {\n            cleanColorObj = this.cleanRGB(color, type);\n        }\n\n        let { isValid, ...filteredCleanColorObj } = cleanColorObj;\n        if (type === 'foreground') {\n            fg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        } else {\n            bg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        }\n\n        if (isValid) {\n            this.props.onColorChange(fg, bg);\n        }\n    };\n\n    debouncedColorInputHandler = debounce(this.onColorInput.bind(this), 5);\n\n    onHexSwap = (event: ChangeEvent) => {\n        const isHex = (event.target as HTMLInputElement).value === 'hex';\n\n        this.props.onHexSwap(isHex);\n    };\n\n    render() {\n        return (\n            <section className=\"contrast-checker\">\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Text color\"\n                            type=\"color-code\"\n                            className=\"foreground-input\"\n                            format={this.inputFormat}\n                            value={this.props.foregroundColor.activeColor}\n                            errors={this.state.foregroundErrors}\n                            oninput={this.onForegroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Text color\"\n                            className=\"foreground-color-input\"\n                            value={this.props.foregroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onForegroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.foregroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.foregroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"contrast-value\">\n                    <div>Contrast value</div>\n                    <h2>\n                        {this.props.contrastValue.toFixed(3)}\n                        {this.props.isAPCA ? (\n                            <span>\n                                {' '}\n                                L<sup>c</sup>\n                            </span>\n                        ) : (\n                            <span>:1</span>\n                        )}\n                    </h2>\n                    <protean-button variant=\"icon\" onClick={this.swapColors} a11y-label=\"Swap colors\">\n                        <protean-icon type=\"swap\"></protean-icon>\n                    </protean-button>\n                </div>\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Background color\"\n                            value={this.props.backgroundColor.activeColor}\n                            className=\"background-input\"\n                            type=\"color-code\"\n                            format={this.inputFormat}\n                            errors={this.state.backgroundErrors}\n                            oninput={this.onBackgroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Background color\"\n                            className=\"background-color-input\"\n                            value={this.props.backgroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onBackgroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.backgroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.backgroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"radio-list\">\n                    <RadioButton\n                        value=\"rgb\"\n                        label=\"Use RGB\"\n                        name={this.radioName}\n                        checked={!this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                    <RadioButton\n                        value=\"hex\"\n                        label=\"Use Hex\"\n                        name={this.radioName}\n                        checked={this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                </div>\n                <div className=\"sample-container\">\n                    <SampleText\n                        fontSize=\"16px\"\n                        fontWeight={600}\n                        text=\"Sample text\"\n                        foregroundColor={this.props.foregroundColor.hexString}\n                        backgroundColor={this.props.backgroundColor.hexString}\n                    />\n                </div>\n            </section>\n        );\n    }\n}\n","export default function debounce<T extends Parameters<any>>(\n    fn: (...args: T) => void,\n    threshold = 100\n): (...args: T) => void {\n    let timeout: NodeJS.Timeout;\n\n    return function (...args: T): void {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...args), threshold);\n    };\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport LookupTableCell from '../LookupTableCell';\nimport { lookupTableItems } from './static';\nimport './styles.scss';\nimport SampleText from '../SampleText';\nimport ContrastChecker from '../ContrastChecker';\n\nexport interface APCADemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\nexport default class APCADemo extends Component<APCADemoProps> {\n    render() {\n        return (\n            <div className=\"apca-demo\">\n                <ContrastChecker\n                    isAPCA={true}\n                    foregroundColor={this.props.foregroundColor}\n                    backgroundColor={this.props.backgroundColor}\n                    contrastValue={this.props.contrastValue}\n                    isHex={this.props.isHex}\n                    onColorChange={this.props.onColorChange}\n                    onHexSwap={this.props.onHexSwap}\n                />\n                <section>\n                    <h2>Color contrast in WCAG 3.0</h2>\n                    <p>\n                        Color contrast value in WCAG 3.0 is calculated using the{' '}\n                        <a href=\"https://www.myndex.com/APCA/\" rel=\"noreferrer\" target=\"_blank\">\n                            Advanced Perception of Color Algorithm (APCA)\n                        </a>{' '}\n                        . Unlike previous contrast calculations, the APCA considers the context in which colors are used\n                        to determine their readability. The font size, font weight, and sequence of background and text\n                        colors all impact the final WCAG rating.\n                    </p>\n                    <p>\n                        WCAG 3.0 ratings for text contrast are based on the proximity of a calculated contrast value (L\n                        <sup>c</sup>) to its target score on the APCA Lookup Table below.\n                    </p>\n                    <section>\n                        <h3>APCA Lookup Table</h3>\n                        <div className=\"lookup-table-wrapper\">\n                            <table className=\"lookup-table\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th colSpan={9} className=\"lookup-table-weight-header\">\n                                            <strong>Font weight →</strong>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <th aria-label=\"Font size\"></th>\n                                        <th aria-label=\"Font weight 100\">100</th>\n                                        <th aria-label=\"Font weight 200\">200</th>\n                                        <th aria-label=\"Font weight 300\">300</th>\n                                        <th aria-label=\"Font weight 400\">400</th>\n                                        <th aria-label=\"Font weight 500\">500</th>\n                                        <th aria-label=\"Font weight 600\">600</th>\n                                        <th aria-label=\"Font weight 700\">700</th>\n                                        <th aria-label=\"Font weight 800\">800</th>\n                                        <th aria-label=\"Font weight 900\">900</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {lookupTableItems.map((row, rowIndex) => (\n                                        <tr key={`lookup-table-row-${rowIndex}`}>\n                                            {row.map((cell, index) => {\n                                                const tag = index === 0 ? 'th' : 'td';\n                                                return (\n                                                    <LookupTableCell\n                                                        tag={tag}\n                                                        value={cell.value}\n                                                        decorator={cell.decorator}\n                                                        comparisonValue={this.props.contrastValue}\n                                                        key={`lookup-table-cell-${rowIndex}-${index}`}\n                                                    />\n                                                );\n                                            })}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <section className=\"lookup-table-key\">\n                                <h4>Table key</h4>\n                                <ul className=\"lookup-table-key-list\">\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={4} tag=\"div\" comparisonValue={0} />\n                                        <div>\n                                            WCAG 3.0 Rating 4 - meets or exceeds the values on the APCA Lookup table\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={3} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 3 - 1-4% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={2} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 2 - 5-9% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={1} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 1 - 10-15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={0} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 0 - &gt;15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"caution\" />\n                                        <div>Not recommended for blocks of text</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"X\" decorator=\"prohibited\" tag=\"div\" />\n                                        <div>Prohibited except for decorative purposes</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"©\" decorator=\"copyright\" tag=\"div\" />\n                                        <div>Use for copyright/by-line only</div>\n                                    </li>\n                                </ul>\n                            </section>\n                        </div>\n                    </section>\n                </section>\n                <section>\n                    <h2>Example font combinations & ratings</h2>\n                    <div className=\"sample-container\">\n                        <SampleText\n                            fontSize=\"14px\"\n                            fontWeight={400}\n                            text=\"14px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 100)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={400}\n                            text=\"16px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 90)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={600}\n                            text=\"16px/600\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 60)}\n                        />\n                        <SampleText\n                            fontSize=\"24px\"\n                            fontWeight={500}\n                            text=\"24px/500\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 55)}\n                        />\n                        <SampleText\n                            fontSize=\"30px\"\n                            fontWeight={300}\n                            text=\"30px/300\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 70)}\n                        />\n                    </div>\n                </section>\n                <hr />\n                <section>\n                    <h2>Attributions</h2>\n                    <p>\n                        SAPC & APCA were invented / developed by Andrew Somers, Senior Color Science Researcher at\n                        Myndex Technologies as part of the ongoing PerceptEx™ Perception Research Project.\n                    </p>\n\n                    <p>SAPC: S-LUV Advanced Perceptual Color — an appearance model for self-illuminated displays</p>\n\n                    <p>\n                        APCA: Advanced Perceptual Contrast Algorithm — a method for determining contrast to guide\n                        web-based design.\n                    </p>\n\n                    <p>\n                        APCA is derived from the SAPC model. APCA is a method for prediction pf suprathreshold visual\n                        contrast of text on displays. APCA results are intended to provide design guidance for best\n                        readability of web-based content.\n                    </p>\n                    <section>\n                        <h3>APCA DISCLAIMER</h3>\n\n                        <p>\n                            APCA is intended solely for web-based content per the W3 WCAG 3.0 standards, and the\n                            web-content version is licensed to the W3 per their cooperative agreement. Use for\n                            other-than web-based-content is restricted and/or prohibited. APCA is a public beta, under\n                            active development. Prior written authorization is required for the use of SAPC or APCA in\n                            the context of, or in applications for, transportation, aerospace, medical, military, or\n                            where human safety is involved.\n                        </p>\n                    </section>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\nimport ContrastChecker from '../ContrastChecker';\nimport './styles.scss';\n\nexport interface RatioDemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ntype RatioGradeText = 'pass' | 'fail';\n\nexport default class RatioDemo extends Component<RatioDemoProps> {\n    getGradeText(threshold: number): RatioGradeText {\n        return this.props.contrastValue < threshold ? 'fail' : 'pass';\n    }\n\n    render() {\n        const grade3 = this.getGradeText(3);\n        const grade45 = this.getGradeText(4.5);\n        const grade7 = this.getGradeText(7);\n\n        return (\n            <div className=\"ratio-demo\">\n                <section>\n                    <ContrastChecker\n                        foregroundColor={this.props.foregroundColor}\n                        backgroundColor={this.props.backgroundColor}\n                        contrastValue={this.props.contrastValue}\n                        isAPCA={false}\n                        isHex={this.props.isHex}\n                        onColorChange={this.props.onColorChange}\n                        onHexSwap={this.props.onHexSwap}\n                    />\n                </section>\n                <section>\n                    <h2>Normal text</h2>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"normal-aa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"normal-aaa-grade\">\n                            <span className={grade7}>{grade7}</span>\n                        </dd>\n                    </dl>\n                </section>\n                <section>\n                    <h2>Large text</h2>\n                    <p>\n                        Text that is 14pt (18.67px) and bold or any text bigger than 18pt (24px) is defined as large\n                        scale text.\n                    </p>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"large-aa-grade\">\n                            <span className={grade3}>{grade3}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"large-aaa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                    </dl>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\n\nclass ProteanTabPane extends Component<IProteanTabPane> {\n    render() {\n        return (\n            <protean-tab-pane label={this.props.label} value={this.props.value} name={this.props.name}>\n                {this.props.children}\n            </protean-tab-pane>\n        );\n    }\n}\n\nexport default ProteanTabPane;\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanCheckbox extends Component<IProteanCheckbox> {\n    elementRef: RefObject<IProteanCheckbox> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const checkbox = this.elementRef?.current as IProteanCheckbox & IDict;\n\n        if (checkbox) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                checkbox[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-checkbox ref={this.elementRef}></protean-checkbox>;\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanTabContainer extends Component<IProteanTabContainer> {\n    elementRef: RefObject<IProteanTabContainer> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const tabContainer = this.elementRef?.current as IProteanTabContainer & IDict;\n\n        if (tabContainer) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                tabContainer[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-tab-container ref={this.elementRef}>{this.props.children}</protean-tab-container>;\n    }\n}\n","export function luminance(rgb: number[]) {\n    const multipliers = [0.2126, 0.7152, 0.0722];\n    return rgb.reduce((acc, item, index) => {\n        let num = item / 255;\n        num = num <= 0.03928 ? num / 12.92 : Math.pow((num + 0.055) / 1.055, 2.4);\n\n        acc += num * multipliers[index];\n        return acc;\n    }, 0);\n}\n\nexport default function legacyContrast(rgb1: number[], rgb2: number[]) {\n    const lum1 = luminance(rgb1);\n    const lum2 = luminance(rgb2);\n\n    const darkest = Math.min(lum1, lum2);\n    const brightest = Math.max(lum1, lum2);\n\n    return (brightest + 0.05) / (darkest + 0.05);\n}\n","////////////////////////////////////////////////////////////////////////////////\n/** @preserve\n/////                *** APCA VERSION for W3 and WCAG 3 ***\n/////\n/////   SAPC - S-Luv Advanced Perceptual Contrast - Beta Algorithm 0.98e_d12e\n/////                *** With the NEW SmoothScale extension ***\n/////              *** Optimized for the Font Select Extension ***\n/////\n/////   Functions to parse color values and determine SAPC/APCA contrast\n/////   Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.\n/////   LICENSE: GNU AGPL v3  https://www.gnu.org/licenses/\n/////   CONTACT: For SAPC/APCA Please use the ISSUES tab at:\n/////   https://github.com/Myndex/SAPC-APCA/\n// */\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////                        SAPC Method and APCA Algorithm\n/////          •••• Version 0.98e_d12e with SmoothScale™ by Andrew Somers ••••\n/////\n/////   GITHUB: https://github.com/Myndex/SAPC-APCA\n/////   DEVELOPER SITE: https://www.myndex.com/WEB/Perception\n/////\n/////   Thanks To:\n/////   • This project references the research and work of Dr.Legge, Dr.Arditi,\n/////     Dr.Lovie-Kitchin, M.Fairchild, R.Hunt, M.Stone, Dr.Poynton, L.Arend, &\n/////     many others — see refs at https://www.myndex.com/WEB/WCAG_CE17polarity\n/////   • Stoyan Stefanov for his input parsing idea, Twitter @stoyanstefanov\n/////   • Bruce Bailey of USAccessBoard for his encouragement, ideas, & feedback\n/////   • Chris Loiselle of Oracle for getting us back on track in a pandemic\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////   *****  SAPC BLOCK  *****\n/////\n/////   For Evaluations, this is referred to as: SAPC-8, D-series constants\n/////                S-LUV Advanced Perceptual Contrast\n/////   Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.\n/////\n/////\n/////   INCLUDED Extensions or Model Features:\n/////       • SAPC-8 Core Contrast\n/////       • SmoothScale™ scaling technique\n/////       • SoftToe black level soft clamp\n/////\n/////   NOT INCLUDED — This Version Does NOT Have These Extensions:\n/////       • Color Vision Module\n/////       • Spatial Frequency Module\n/////       • Light Adaptation Module\n/////       • Dynamics Module\n/////       • Alpha Module\n/////       • Personalization Module\n/////       • Multiway Module\n/////       • DynaFont™ font display\n/////       • ResearchMode middle contrast explorer\n/////       • ResearchMode static target\n/////       • CIE function suite\n/////       • SAPColor listings and sorting suite\n/////       • RGBcolor() colorString parsing\n/////\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n/////  BEGIN SAPC/APCA CONTRAST BLOCK  \\//////////////////////////////////////\n////                                    \\////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n///// SAPC Function with SmoothScale  \\////////////////////////////////////\n////                                   \\//////////////////////////////////\n///\n\n///// *** Polarity is Important: do not mix up background and text *** /////\n\n/////  Input value must be integer in RGB order (RRGGBB for 0xFFFFFF)  /////\n\n/////  DO NOT use a Y from any other method  /////\n\nexport default function APCAContrast(background: number, text: number) {\n    let Rbg = (background & 0xff0000) >> 16;\n    let Gbg = (background & 0x00ff00) >> 8;\n    let Bbg = background & 0x0000ff;\n\n    let Rtxt = (text & 0xff0000) >> 16,\n        Gtxt = (text & 0x00ff00) >> 8,\n        Btxt = text & 0x0000ff;\n\n    /////  MAGICAL NUMBERS  ///////////////////////////////\n\n    /////  sRGB Conversion to Relative Luminance (Y)  /////\n\n    const mainTRC = 2.4; // Transfer Curve (aka \"Gamma\") for sRGB linearization\n    // Simple power curve vs piecewise described in docs\n    // Essentially, 2.4 best models actual display\n    // characteristics in combination with the total method\n\n    // const mainTRCencode = 0.41666666666666666667; // = 1.0/mainTRC;\n\n    const Rco = 0.2126729, // sRGB Red Coefficient (from matrix)\n        Gco = 0.7151522, // sRGB Green Coefficient (from matrix)\n        Bco = 0.072175; // sRGB Blue Coefficient (from matrix)\n\n    /////  For Finding Raw SAPC Contrast from Relative Luminance (Y)  /////\n\n    const normBG = 0.56, // Constants for SAPC Power Curve Exponents\n        normTXT = 0.57, // One pair for normal text, and one for reverse\n        revTXT = 0.62, // These are the \"beating heart\" of SAPC\n        revBG = 0.65;\n\n    /////  For Clamping and Scaling Values  /////\n\n    const blkThrs = 0.022, // Level that triggers the soft black clamp\n        blkClmp = 1.414, // Exponent for the soft black clamp curve\n        deltaYmin = 0.0005, // Lint trap\n        scaleBoW = 1.14, // Scaling for dark text on light\n        scaleWoB = 1.14, // Scaling for light text on dark\n        loConThresh = 0.035991, // Threshold for new simple offset scale\n        loConFactor = 27.7847239587675, // = 1/0.078,\n        loConOffset = 0.027, // The simple offset\n        loClip = 0.001; // Output clip (lint trap #2)\n\n    // We are only concerned with Y at this point\n    // Ybg and Ytxt: divide sRGB to 0.0-1.0 range, linearize,\n    // and then apply the standard coefficients and sum to Y.\n    // Note that the Y we create here is unique and designed\n    // exclusively for SAPC. Do not use Y from other methods.\n\n    let Ybg =\n        Math.pow(Rbg / 255.0, mainTRC) * Rco +\n        Math.pow(Gbg / 255.0, mainTRC) * Gco +\n        Math.pow(Bbg / 255.0, mainTRC) * Bco;\n\n    let Ytxt =\n        Math.pow(Rtxt / 255.0, mainTRC) * Rco +\n        Math.pow(Gtxt / 255.0, mainTRC) * Gco +\n        Math.pow(Btxt / 255.0, mainTRC) * Bco;\n\n    let SAPC = 0.0; // For holding raw SAPC values\n    let outputContrast = 0.0; // For weighted final values\n\n    ///// TUTORIAL  /////\n\n    // Take Y and soft clamp black, return 0 for very close luminances\n    // determine polarity, and calculate SAPC raw contrast\n    // Then apply the output scaling\n\n    // Note that reverse contrast (white text on black)\n    // intentionally returns a negative number\n    // Proper polarity is important!\n\n    //////////   BLACK SOFT CLAMP & INPUT CLIP  ////////////////////////////////\n\n    // Soft clamp Y when near black.\n    // Now clamping all colors to prevent crossover errors\n    Ytxt = Ytxt > blkThrs ? Ytxt : Ytxt + Math.pow(blkThrs - Ytxt, blkClmp);\n\n    Ybg = Ybg > blkThrs ? Ybg : Ybg + Math.pow(blkThrs - Ybg, blkClmp);\n\n    /////   Return 0 Early for extremely low ∆Y (lint trap #1) /////\n    if (Math.abs(Ybg - Ytxt) < deltaYmin) {\n        return 0.0;\n    }\n\n    //////////   SAPC CONTRAST   ///////////////////////////////////////////////\n\n    if (Ybg > Ytxt) {\n        // For normal polarity, black text on white\n\n        ///// Calculate the SAPC contrast value and scale\n\n        SAPC = (Math.pow(Ybg, normBG) - Math.pow(Ytxt, normTXT)) * scaleBoW;\n\n        ///// NEW! SAPC SmoothScale™\n        // Low Contrast Smooth Scale Rollout to prevent polarity reversal\n        // and also a low clip for very low contrasts (lint trap #2)\n        // much of this is for very low contrasts, less than 10\n        // therefore for most reversing needs, only loConOffset is important\n        outputContrast =\n            SAPC < loClip ? 0.0 : SAPC < loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC - loConOffset;\n    } else {\n        // For reverse polarity, light text on dark\n        // WoB should always return negative value.\n\n        SAPC = (Math.pow(Ybg, revBG) - Math.pow(Ytxt, revTXT)) * scaleWoB;\n\n        outputContrast =\n            SAPC > -loClip ? 0.0 : SAPC > -loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC + loConOffset;\n    }\n\n    return outputContrast * 100;\n} // Close APCAcontrast()\n\n////\\                            ///////////////////////////////////////////\\\n/////\\  END OF SAPC/APCA BLOCK  /////////////////////////////////////////////\\\n//////////////////////////////////////////////////////////////////////////////\\\n///////////////////////////////////////////////////////////////////////////////\\\n","import { Component } from 'react';\nimport './styles.scss';\nimport APCADemo from '../APCADemo';\nimport RatioDemo from '../RatioDemo';\nimport ProteanTabPane from '../ProteanTabPane';\nimport ProteanCheckbox from '../ProteanCheckbox';\nimport ProteanTabContainer from '../ProteanTabContainer';\nimport legacyContrast from '../../utils/legacy-ratio';\nimport APCAContrast from '../../utils/apca-contrast';\n\ninterface AppState {\n    activeTab: string;\n    darkModeEnabled: boolean;\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    APCAContrastValue: number;\n    legacyContrastRatio: number;\n    isHex: boolean;\n}\n\nexport default class App extends Component<{}, AppState> {\n    constructor(props: {}) {\n        super(props);\n\n        const darkModeEnabled = localStorage.getItem('darkModeEnabled') === 'true';\n        if (darkModeEnabled) {\n            document.documentElement.classList.remove('light');\n        }\n\n        const foregroundColor = {\n            hexString: '#1a1a1a',\n            rgbString: 'rgb(26, 26, 26)',\n            activeColor: '#1a1a1a',\n            hexNumber: parseInt('1a1a1a', 16),\n            rgb: [26, 26, 26],\n        };\n\n        const backgroundColor = {\n            hexString: '#c7b5fb',\n            rgbString: 'rgb(199, 181, 251)',\n            activeColor: '#c7b5fb',\n            hexNumber: parseInt('c7b5fb', 16),\n            rgb: [199, 181, 251],\n        };\n\n        this.state = {\n            activeTab: 'wcag-30',\n            darkModeEnabled,\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue: APCAContrast(backgroundColor.hexNumber, foregroundColor.hexNumber),\n            legacyContrastRatio: legacyContrast(foregroundColor.rgb, backgroundColor.rgb),\n            isHex: true,\n        };\n    }\n\n    onTabChange = (event: CustomEvent) => {\n        if ((event.target as HTMLElement).localName !== 'protean-tab-container') return;\n\n        this.setState({ activeTab: event.detail.value });\n    };\n\n    onLightModeToggle = (event: CustomEvent) => {\n        const darkModeEnabled = event.detail.checked;\n        localStorage.setItem('darkModeEnabled', darkModeEnabled);\n        this.setState({ darkModeEnabled });\n        document.documentElement.classList.toggle('light');\n    };\n\n    onColorChange = (foregroundColor: IColorData, backgroundColor: IColorData) => {\n        const APCAContrastValue = APCAContrast(backgroundColor.hexNumber, foregroundColor.hexNumber);\n        const legacyContrastRatio = legacyContrast(foregroundColor.rgb, backgroundColor.rgb);\n\n        this.setState({\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue,\n            legacyContrastRatio,\n        });\n    };\n\n    onHexSwap = (isHex: boolean) => {\n        this.setState(({ foregroundColor, backgroundColor }) => {\n            return {\n                isHex,\n                foregroundColor: {\n                    ...foregroundColor,\n                    activeColor: isHex ? foregroundColor.hexString : foregroundColor.rgbString,\n                },\n                backgroundColor: {\n                    ...backgroundColor,\n                    activeColor: isHex ? backgroundColor.hexString : backgroundColor.rgbString,\n                },\n            };\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"app content\">\n                <div className=\"header-content\">\n                    <h1>\n                        Contrast <span className=\"hidden-s\">checker</span>\n                    </h1>\n                    <ProteanCheckbox\n                        className=\"dark-mode-toggle\"\n                        label=\"Dark mode\"\n                        variant=\"toggle\"\n                        alignment=\"right\"\n                        checked={this.state.darkModeEnabled}\n                        onchange={this.onLightModeToggle}\n                    />\n                </div>\n                <ProteanTabContainer value={this.state.activeTab} onchange={this.onTabChange}>\n                    <ProteanTabPane value=\"wcag-30\" label=\"WCAG 3.0\">\n                        <APCADemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.APCAContrastValue}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </ProteanTabPane>\n                    <protean-tab-pane value=\"wcag-21\" label=\"WCAG 2.1\">\n                        <RatioDemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.legacyContrastRatio}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </protean-tab-pane>\n                </ProteanTabContainer>\n            </div>\n        );\n    }\n}\n","import { p as promiseResolve, b as bootstrapLazy } from './index-2dc39354.js';\n\n/*\n Stencil Client Patch Esm v2.5.2 | MIT Licensed | https://stenciljs.com\n */\nconst patchEsm = () => {\n    return promiseResolve();\n};\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"protean-button_11\",[[1,\"protean-select\",{\"value\":[1025],\"selectedOptions\":[1040],\"multiple\":[516],\"label\":[513],\"a11yLabel\":[513,\"a11y-label\"],\"optional\":[516],\"disabled\":[516],\"errors\":[16],\"dropdownOpen\":[32],\"activeOptionId\":[32]},[[0,\"change\",\"defaultChangeHandler\"],[0,\"focus\",\"delegateFocus\"]]],[1,\"protean-option\",{\"value\":[513],\"label\":[513],\"selected\":[516],\"active\":[516],\"disabled\":[516],\"disabledGroup\":[516,\"disabled-group\"]},[[0,\"click\",\"defaultClickHandler\"]]],[1,\"protean-button\",{\"variant\":[513],\"type\":[513],\"disabled\":[516],\"a11yLabel\":[513,\"a11y-label\"]},[[0,\"focus\",\"delegateFocus\"]]],[1,\"protean-checkbox\",{\"checked\":[1540],\"variant\":[513],\"label\":[513],\"a11yLabel\":[513,\"a11y-label\"],\"alignment\":[513],\"disabled\":[516],\"indeterminate\":[516]},[[0,\"change\",\"defaultChangeHandler\"],[0,\"focus\",\"delegateFocus\"]]],[1,\"protean-optgroup\",{\"label\":[513],\"disabled\":[516]}],[1,\"protean-tab-container\",{\"value\":[1537],\"name\":[513],\"tabs\":[32]},[[0,\"change\",\"defaultChangeHandler\"]]],[1,\"protean-tab-pane\",{\"label\":[513],\"value\":[513],\"name\":[513],\"selected\":[4],\"guid\":[2],\"index\":[2]}],[1,\"protean-input\",{\"value\":[1025],\"type\":[513],\"label\":[513],\"disabled\":[516],\"maxlength\":[514],\"format\":[513],\"optional\":[516],\"hints\":[16],\"errors\":[16],\"suppressMessages\":[516,\"suppress-messages\"],\"readonly\":[516],\"a11yLabel\":[513,\"a11y-label\"],\"ariaHasPopup\":[1,\"aria-has-popup\"],\"ariaExpanded\":[4,\"aria-expanded\"],\"ariaRole\":[1,\"aria-role\"],\"formattedValueObject\":[32]},[[0,\"change\",\"defaultChangeHandler\"],[0,\"focus\",\"delegateFocus\"]]],[0,\"protean-click-elsewhere\"],[1,\"protean-message\",{\"type\":[513],\"level\":[513],\"variant\":[513]}],[1,\"protean-icon\",{\"type\":[513],\"use\":[513]}]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n","\n(function(){if(\"undefined\"!==typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)};HTMLElement.prototype=a.prototype;HTMLElement.prototype.constructor=HTMLElement;Object.setPrototypeOf(HTMLElement,a)}})();\nexport * from '../dist/esm/polyfills/index.js';\nexport * from '../dist/esm/loader.js';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\nimport { defineCustomElements } from 'protean-elements/loader';\n\ndefineCustomElements();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}