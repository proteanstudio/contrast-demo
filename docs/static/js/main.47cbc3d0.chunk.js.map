{"version":3,"sources":["../node_modules/protean-elements/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/apca-rating/index.ts","components/LookupTableCell/index.tsx","components/APCADemo/static.ts","components/SampleText/index.tsx","components/ProteanInput/index.tsx","utils/guid/index.ts","components/RadioButton/index.tsx","components/ContrastChecker/index.tsx","utils/debounce/index.ts","components/APCADemo/index.tsx","components/RatioDemo/index.tsx","components/ProteanTabPane/index.tsx","components/ProteanCheckbox/index.tsx","components/ProteanTabContainer/index.tsx","utils/legacy-ratio/index.ts","utils/apca-contrast/index.ts","components/App/index.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","APCARating","comparisonValue","value","percentageDiff","Math","abs","normalizedDiff","floor","Map","get","LookupTableCell","Component","decorator","this","props","includes","undefined","isIncalculable","rating","render","tag","className","wrapperClasses","aria-label","ariaLabel","Array","fill","i","index","lookupTableItems","SampleText","backgroundColor","foregroundColor","text","fontSize","fontWeight","wrapperStyle","color","mainTextStyle","style","ProteanInput","elementRef","createRef","componentDidMount","bindProps","componentDidUpdate","input","current","children","ref","propsToCopy","entries","forEach","key","guid","createGuid","RadioButton","radioId","data-checked","checked","type","name","disabled","onChange","handleChange","htmlFor","viewBox","xmlns","focusable","aria-hidden","cx","cy","r","label","ContrastChecker","constructor","super","radioName","getRGBString","rgb","g","b","swapColors","fg","bg","onColorChange","cleanHex","colorObj","workingColor","substring","length","substr","setError","hexString","rgbString","hexNumber","isValid","colorVal","test","clearError","num","parseInt","values","cleanRGB","match","reduce","acc","item","Number","toString","padStart","push","msg","isHex","setState","backgroundErrors","foregroundErrors","state","onForegroundInput","event","detail","formattedValue","target","hexToRGB","debouncedColorInputHandler","onBackgroundInput","onColorInput","cleanColorObj","filteredCleanColorObj","activeColor","fn","threshold","timeout","args","clearTimeout","setTimeout","debounce","bind","onHexSwap","hex","format","inputFormat","errors","oninput","a11yLabel","isAPCA","contrastValue","toFixed","variant","onClick","a11y-label","APCADemo","href","rel","colSpan","row","rowIndex","cell","RatioDemo","getGradeText","grade3","grade45","grade7","ProteanTabPane","ProteanCheckbox","checkbox","ProteanTabContainer","tabContainer","luminance","multipliers","pow","legacyContrast","rgb1","rgb2","lum1","lum2","darkest","min","max","sRGBtoY","sRGBcolor","rgba","colorString","replace","toLowerCase","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","graya","grayb","grayc","grayd","graye","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","grey9","greya","greyb","greyc","greyd","greye","rexInput","slicesInput","colorDefs","rex","parseStr","slices","colorDefLen","a","exec","channel","isNaN","parseString","simpleExp","chan","APCAcontrast","txtY","bgY","icp","blkThrs","SAPC","outputContrast","round","App","onTabChange","localName","activeTab","onLightModeToggle","darkModeEnabled","localStorage","setItem","document","documentElement","classList","toggle","APCAContrastValue","legacyContrastRatio","getItem","remove","alignment","onchange","defineCustomElements","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47cbc3d0.chunk.js","sourcesContent":["var map = {\n\t\"./protean-button_11.entry.js\": [\n\t\t20,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","export default function APCARating(comparisonValue: number, value: number): number {\n    const percentageDiff = (Math.abs(comparisonValue) * 100) / value - 100;\n\n    if (percentageDiff >= 0) return 4;\n\n    const normalizedDiff = Math.floor(percentageDiff / 5) * 5;\n    const rangeMap = new Map<number, number>([\n        [0, 4],\n        [-5, 3],\n        [-10, 2],\n        [-15, 1],\n    ]);\n\n    return rangeMap.get(normalizedDiff) ?? 0;\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport './styles.scss';\n\nexport interface LookupTableCellProps {\n    value: string | number;\n    comparisonValue?: number;\n    decorator?: string;\n    rating?: number;\n    ariaLabel?: string;\n    tag: 'td' | 'th' | 'div';\n}\n\nexport default class LookupTableCell extends Component<LookupTableCellProps> {\n    get isIncalculable(): boolean {\n        const decorator = this.props.decorator;\n        return decorator\n            ? ['copyright', 'prohibited', 'header', 'non-text'].includes(decorator) ||\n                  (['caution', 'not-recommended', 'preferred'].includes(decorator) && this.props.value === 'N')\n            : this.props.comparisonValue === undefined || false;\n    }\n\n    get rating(): number {\n        if (this.isIncalculable) {\n            return 0;\n        }\n\n        if (this.props.rating) return this.props.rating;\n\n        return APCARating(this.props.comparisonValue!, this.props.value as number);\n    }\n\n    get wrapperClasses(): string {\n        const ratingClass = this.isIncalculable ? '' : ` rating-${this.rating}`;\n        return `lookup-table-cell${ratingClass} ${this.props.decorator || ''}`;\n    }\n\n    render() {\n        return (\n            <this.props.tag className={this.wrapperClasses}>\n                <div className=\"cell-content\">\n                    <div className=\"cell-info\">\n                        <div className=\"cell-value\" aria-label={this.props.ariaLabel}>\n                            {this.props.value}\n                            {this.props.decorator === 'preferred' && <sup>P</sup>}\n                        </div>\n                        {!this.isIncalculable && (\n                            <ul className=\"cell-rating\" aria-label={`WCAG 3.0 Rating ${this.rating}`}>\n                                {new Array(this.rating).fill(undefined).map((i, index) => (\n                                    <li key={index}></li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                </div>\n            </this.props.tag>\n        );\n    }\n}\n","export interface LookupTableItem {\n    value: string | number;\n    decorator?: 'header' | 'prohibited' | 'copyright' | 'preferred' | 'caution' | 'not-recommended' | 'non-text';\n    ariaLabel?: string;\n}\n\nexport const lookupTableItems: LookupTableItem[][] = [\n    [\n        {\n            value: '10px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '10.5px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '11px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '12px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 90,\n            decorator: 'caution',\n        },\n        {\n            value: 75,\n            decorator: 'caution',\n        },\n        {\n            value: 75,\n            decorator: 'caution',\n        },\n        {\n            value: 75,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '14px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 90,\n            decorator: 'preferred',\n        },\n        {\n            value: 85,\n            decorator: 'preferred',\n        },\n        {\n            value: 80,\n            decorator: 'preferred',\n        },\n        {\n            value: 75,\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '16px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 75,\n            decorator: 'preferred',\n        },\n        {\n            value: 70,\n            decorator: 'preferred',\n        },\n        {\n            value: 65,\n            decorator: 'preferred',\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 55,\n            decorator: 'caution',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n    ],\n    [\n        {\n            value: '18px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 90,\n            decorator: 'preferred',\n        },\n        {\n            value: 70,\n            decorator: 'preferred',\n        },\n        {\n            value: 65,\n            decorator: 'preferred',\n        },\n        {\n            value: 60,\n            decorator: 'preferred',\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n            decorator: 'caution',\n        },\n        {\n            value: 45,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '21px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: '©',\n            decorator: 'copyright',\n        },\n        {\n            value: 85,\n            decorator: 'preferred',\n        },\n        {\n            value: 65,\n            decorator: 'preferred',\n        },\n        {\n            value: 60,\n            decorator: 'preferred',\n        },\n        {\n            value: 55,\n            decorator: 'preferred',\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 45,\n            decorator: 'caution',\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '24px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 90,\n        },\n        {\n            value: 75,\n            decorator: 'preferred',\n        },\n        {\n            value: 60,\n            decorator: 'preferred',\n        },\n        {\n            value: 55,\n            decorator: 'preferred',\n        },\n        {\n            value: 50,\n            decorator: 'preferred',\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '32px',\n            decorator: 'header',\n        },\n        {\n            value: 'X',\n            decorator: 'prohibited',\n        },\n        {\n            value: 85,\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n    ],\n    [\n        {\n            value: '42px',\n            decorator: 'header',\n        },\n        {\n            value: 90,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 75,\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n    ],\n    [\n        {\n            value: '56px',\n            decorator: 'header',\n        },\n        {\n            value: 85,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 70,\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n    ],\n    [\n        {\n            value: '72px',\n            decorator: 'header',\n        },\n        {\n            value: 75,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 60,\n        },\n        {\n            value: 50,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n    ],\n    [\n        {\n            value: '96px',\n            decorator: 'header',\n        },\n        {\n            value: 70,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 55,\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 35,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n    ],\n    [\n        {\n            value: '128px',\n            decorator: 'header',\n        },\n        {\n            value: 60,\n            decorator: 'not-recommended',\n        },\n        {\n            value: 45,\n        },\n        {\n            value: 40,\n            decorator: 'caution',\n        },\n        {\n            value: 30,\n            decorator: 'caution',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n        {\n            value: 'NT',\n            decorator: 'non-text',\n        },\n    ],\n];\n","import { Component } from 'react';\nimport './styles.scss';\n\nexport interface SampleTextProps {\n    foregroundColor: string;\n    backgroundColor: string;\n    fontSize: string;\n    fontWeight: number;\n    text: string;\n    rating?: number;\n}\n\nexport default class SampleText extends Component<SampleTextProps> {\n    render() {\n        const { backgroundColor, foregroundColor, text, fontSize, fontWeight, rating } = this.props;\n\n        const wrapperStyle = {\n            backgroundColor,\n            color: foregroundColor,\n        };\n\n        const mainTextStyle = {\n            fontSize,\n            fontWeight,\n        };\n\n        return (\n            <div className=\"sample-text\" style={wrapperStyle}>\n                <div className=\"main-text\" style={mainTextStyle}>\n                    {text}\n                </div>\n                {rating !== undefined && (\n                    <div className=\"rating-text\">\n                        Rating: <strong>{rating}</strong>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanInput extends Component<IProteanInput> {\n    elementRef: RefObject<IProteanInput> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const input = this.elementRef?.current as IProteanInput & IDict;\n\n        if (input) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                input[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-input ref={this.elementRef}></protean-input>;\n    }\n}\n","let guid = 1000;\nexport default function createGuid(): number {\n    return guid++;\n}\n","import { Component, ChangeEvent } from 'react';\nimport createGuid from '../../utils/guid/';\nimport './styles.scss';\n\nexport interface RadioButtonProps {\n    checked: boolean;\n    label: string;\n    name: string;\n    value: string;\n    disabled?: boolean;\n    handleChange: (event: ChangeEvent) => void;\n}\n\nexport default class RadioButton extends Component<RadioButtonProps> {\n    radioId: string = `radio-button-${createGuid()}`;\n\n    render() {\n        return (\n            <div className=\"radio-button\" data-checked={this.props.checked}>\n                <input\n                    className=\"sr\"\n                    type=\"radio\"\n                    id={this.radioId}\n                    name={this.props.name}\n                    value={this.props.value}\n                    disabled={this.props.disabled ?? false}\n                    checked={this.props.checked}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor={this.radioId}>\n                    <svg\n                        className=\"radio-symbol\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        focusable=\"false\"\n                        aria-hidden=\"true\"\n                    >\n                        <circle className=\"radio-outer\" cx=\"12\" cy=\"12\" r=\"11\" />\n                        {this.props.checked && <circle className=\"radio-inner\" cx=\"12\" cy=\"12\" r=\"6\" />}\n                    </svg>\n                    <span className=\"label-text\">{this.props.label}</span>\n                </label>\n            </div>\n        );\n    }\n}\n","import { Component, ChangeEvent } from 'react';\nimport ProteanInput from '../ProteanInput';\nimport RadioButton from '../RadioButton';\nimport SampleText from '../SampleText';\nimport debounce from '../../utils/debounce/';\nimport createGuid from '../../utils/guid';\nimport './styles.scss';\n\nexport interface ContrastCheckerProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    isAPCA: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ninterface ContrastCheckerState {\n    foregroundErrors?: string[];\n    backgroundErrors?: string[];\n}\n\ninterface CleanColor {\n    hexString: string;\n    rgbString: string;\n    hexNumber: number;\n    rgb: number[];\n    isValid: boolean;\n}\n\nexport default class ContrastChecker extends Component<ContrastCheckerProps, ContrastCheckerState> {\n    constructor(props: ContrastCheckerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    radioName: string = `color-type-${createGuid()}`;\n\n    get inputFormat(): 'hex' | 'rgb' {\n        return this.props.isHex ? 'hex' : 'rgb';\n    }\n\n    getRGBString = (rgb: number[]): string => {\n        const [r, g, b] = rgb;\n        return `rgb(${r}, ${g}, ${b})`;\n    };\n\n    hexToRGB(hex: string): string {\n        const r = parseInt(hex.substr(1, 2), 16);\n        const g = parseInt(hex.substr(3, 2), 16);\n        const b = parseInt(hex.substr(5, 2), 16);\n        return `rgb(${r}, ${g}, ${b})`;\n    }\n\n    swapColors = (): void => {\n        const fg = { ...this.props.backgroundColor };\n        const bg = { ...this.props.foregroundColor };\n\n        this.props.onColorChange(fg, bg);\n    };\n\n    cleanHex = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        let workingColor = color.substring(1);\n        let colorObj: {\n            r: string;\n            g: string;\n            b: string;\n            [key: string]: string;\n        };\n\n        switch (workingColor.length) {\n            case 1:\n                colorObj = {\n                    r: workingColor + workingColor,\n                    g: workingColor + workingColor,\n                    b: workingColor + workingColor,\n                };\n                break;\n            case 2:\n                colorObj = {\n                    r: workingColor,\n                    g: workingColor,\n                    b: workingColor,\n                };\n                break;\n            case 3:\n                colorObj = {\n                    r: workingColor.substr(0, 1) + workingColor.substr(0, 1),\n                    g: workingColor.substr(1, 1) + workingColor.substr(1, 1),\n                    b: workingColor.substr(2, 1) + workingColor.substr(2, 1),\n                };\n                break;\n            case 6:\n                colorObj = {\n                    r: workingColor.substr(0, 2),\n                    g: workingColor.substr(2, 2),\n                    b: workingColor.substr(4, 2),\n                };\n                break;\n            default:\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n        }\n\n        for (const colorVal in colorObj!) {\n            if (!/^[0-9A-F]{2}$/i.test(colorObj[colorVal])) {\n                this.setError(type);\n                return {\n                    hexString: '',\n                    rgbString: '',\n                    hexNumber: 0,\n                    rgb: [],\n                    isValid: false,\n                };\n            }\n        }\n\n        this.clearError(type);\n        const { r, g, b }: IDict<number | string> = colorObj;\n        workingColor = r + g + b;\n\n        const rgb = [r, g, b].map((num) => parseInt(num, 16));\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor, 16),\n            rgb: Object.values(colorObj).map((num) => parseInt(num, 16)),\n            isValid: true,\n        };\n    };\n\n    cleanRGB = (color: string, type: 'foreground' | 'background'): CleanColor => {\n        const regex = /rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g;\n\n        if (!regex.test(color)) {\n            this.setError(type);\n            return {\n                hexString: '',\n                rgbString: '',\n                hexNumber: 0,\n                rgb: [],\n                isValid: false,\n            };\n        }\n\n        const { workingColor, isValid, rgb } = color\n            .match(/\\d{1,3}/g)\n            ?.reduce<{ workingColor: string; isValid: boolean; rgb: number[] }>(\n                (acc, item) => {\n                    let num = Number(item);\n                    if (num > 255) {\n                        this.setError(type);\n                        acc.isValid = false;\n                    }\n\n                    acc.workingColor += num.toString(16).padStart(2, '0');\n                    acc.rgb.push(num);\n\n                    return acc;\n                },\n                { workingColor: '', isValid: true, rgb: [] }\n            )!;\n\n        if (isValid) {\n            this.clearError(type);\n        }\n\n        return {\n            hexString: `#${workingColor}`,\n            rgbString: this.getRGBString(rgb),\n            hexNumber: parseInt(workingColor!, 16),\n            rgb,\n            isValid,\n        };\n    };\n\n    setError = (type: 'foreground' | 'background'): void => {\n        const formatStr = this.props.isHex ? 'hex' : 'rgb';\n        const msg = [`Please enter a valid ${formatStr} color code`];\n\n        if (type === 'foreground') {\n            this.setState({ foregroundErrors: msg });\n            return;\n        }\n\n        this.setState({ backgroundErrors: msg });\n    };\n\n    clearError = (type: 'foreground' | 'background'): void => {\n        if (type === 'foreground' && !!this.state.foregroundErrors) {\n            this.setState({ foregroundErrors: undefined });\n            return;\n        }\n\n        !!this.state.backgroundErrors && this.setState({ backgroundErrors: undefined });\n    };\n\n    onForegroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'foreground');\n    };\n\n    onBackgroundInput = (event: CustomEvent) => {\n        let color = event.detail.formattedValue;\n        const isColorInput = (event.target as HTMLInputElement).type === 'color';\n\n        if (isColorInput && !this.props.isHex) {\n            color = this.hexToRGB(color);\n        }\n\n        this.debouncedColorInputHandler(color, 'background');\n    };\n\n    onColorInput = (color: string, type: 'foreground' | 'background') => {\n        let fg = { ...this.props.foregroundColor };\n        let bg = { ...this.props.backgroundColor };\n        let cleanColorObj: CleanColor;\n\n        if (this.props.isHex) {\n            cleanColorObj = this.cleanHex(color, type);\n        } else {\n            cleanColorObj = this.cleanRGB(color, type);\n        }\n\n        let { isValid, ...filteredCleanColorObj } = cleanColorObj;\n        if (type === 'foreground') {\n            fg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        } else {\n            bg = {\n                ...filteredCleanColorObj,\n                activeColor: color,\n            };\n        }\n\n        if (isValid) {\n            this.props.onColorChange(fg, bg);\n        }\n    };\n\n    debouncedColorInputHandler = debounce(this.onColorInput.bind(this), 5);\n\n    onHexSwap = (event: ChangeEvent) => {\n        const isHex = (event.target as HTMLInputElement).value === 'hex';\n\n        this.props.onHexSwap(isHex);\n    };\n\n    render() {\n        return (\n            <section className=\"contrast-checker\">\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Text color\"\n                            type=\"color-code\"\n                            className=\"foreground-input\"\n                            format={this.inputFormat}\n                            value={this.props.foregroundColor.activeColor}\n                            errors={this.state.foregroundErrors}\n                            oninput={this.onForegroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Text color\"\n                            className=\"foreground-color-input\"\n                            value={this.props.foregroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onForegroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.foregroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.foregroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"contrast-value\">\n                    <div>Contrast value</div>\n                    <h2>\n                        {this.props.isAPCA ? (\n                            <span>\n                                {this.props.contrastValue} L<sup>c</sup>\n                            </span>\n                        ) : (\n                            <span>{this.props.contrastValue.toFixed(2)}:1</span>\n                        )}\n                    </h2>\n                    <protean-button variant=\"icon\" onClick={this.swapColors} a11y-label=\"Swap colors\">\n                        <protean-icon type=\"swap\"></protean-icon>\n                    </protean-button>\n                </div>\n                <div className=\"field-container\">\n                    <div className=\"flex\">\n                        <ProteanInput\n                            label=\"Background color\"\n                            value={this.props.backgroundColor.activeColor}\n                            className=\"background-input\"\n                            type=\"color-code\"\n                            format={this.inputFormat}\n                            errors={this.state.backgroundErrors}\n                            oninput={this.onBackgroundInput}\n                        />\n                        <ProteanInput\n                            a11yLabel=\"Background color\"\n                            className=\"background-color-input\"\n                            value={this.props.backgroundColor.hexString}\n                            type=\"color\"\n                            oninput={this.onBackgroundInput}\n                        />\n                    </div>\n                    <div className=\"color-values\">\n                        <div>{this.props.backgroundColor.hexString}</div>\n                        <div>|</div>\n                        <div>{this.props.backgroundColor.rgbString}</div>\n                    </div>\n                </div>\n                <div className=\"radio-list\">\n                    <RadioButton\n                        value=\"rgb\"\n                        label=\"Use RGB\"\n                        name={this.radioName}\n                        checked={!this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                    <RadioButton\n                        value=\"hex\"\n                        label=\"Use Hex\"\n                        name={this.radioName}\n                        checked={this.props.isHex}\n                        handleChange={this.onHexSwap}\n                    />\n                </div>\n                <div className=\"sample-container\">\n                    <SampleText\n                        fontSize=\"16px\"\n                        fontWeight={600}\n                        text=\"Sample text\"\n                        foregroundColor={this.props.foregroundColor.hexString}\n                        backgroundColor={this.props.backgroundColor.hexString}\n                    />\n                </div>\n            </section>\n        );\n    }\n}\n","export default function debounce<T extends Parameters<any>>(\n    fn: (...args: T) => void,\n    threshold = 100\n): (...args: T) => void {\n    let timeout: NodeJS.Timeout;\n\n    return function (...args: T): void {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...args), threshold);\n    };\n}\n","import { Component } from 'react';\nimport APCARating from '../../utils/apca-rating/';\nimport LookupTableCell from '../LookupTableCell';\nimport { lookupTableItems } from './static';\nimport './styles.scss';\nimport SampleText from '../SampleText';\nimport ContrastChecker from '../ContrastChecker';\n\nexport interface APCADemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\nexport default class APCADemo extends Component<APCADemoProps> {\n    render() {\n        return (\n            <div className=\"apca-demo\">\n                <ContrastChecker\n                    isAPCA={true}\n                    foregroundColor={this.props.foregroundColor}\n                    backgroundColor={this.props.backgroundColor}\n                    contrastValue={this.props.contrastValue}\n                    isHex={this.props.isHex}\n                    onColorChange={this.props.onColorChange}\n                    onHexSwap={this.props.onHexSwap}\n                />\n                <section>\n                    <h2>Color contrast in WCAG 3.0</h2>\n                    <p>\n                        Color contrast value in WCAG 3.0 is calculated using the{' '}\n                        <a href=\"https://www.myndex.com/APCA/\" rel=\"noreferrer\" target=\"_blank\">\n                            Advanced Perception of Color Algorithm (APCA)\n                        </a>\n                        . Unlike previous contrast calculations, the APCA considers the context in which colors are used\n                        to determine their readability. The font size, font weight, and sequence of background and text\n                        colors all impact the final WCAG rating.\n                    </p>\n                    <p>\n                        WCAG 3.0 ratings for text contrast are based on the proximity of a calculated contrast value (L\n                        <sup>c</sup>) to its target score on the APCA Lookup Table below.\n                    </p>\n                    <section>\n                        <h3>APCA Lookup Table</h3>\n                        <div className=\"lookup-table-wrapper\">\n                            <table className=\"lookup-table\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th colSpan={9} className=\"lookup-table-weight-header\">\n                                            <strong>Font weight</strong>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <th aria-label=\"Font size\"></th>\n                                        <th aria-label=\"Font weight 100\">100</th>\n                                        <th aria-label=\"Font weight 200\">200</th>\n                                        <th aria-label=\"Font weight 300\">300</th>\n                                        <th aria-label=\"Font weight 400\">400</th>\n                                        <th aria-label=\"Font weight 500\">500</th>\n                                        <th aria-label=\"Font weight 600\">600</th>\n                                        <th aria-label=\"Font weight 700\">700</th>\n                                        <th aria-label=\"Font weight 800\">800</th>\n                                        <th aria-label=\"Font weight 900\">900</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {lookupTableItems.map((row, rowIndex) => (\n                                        <tr key={`lookup-table-row-${rowIndex}`}>\n                                            {row.map((cell, index) => {\n                                                const tag = index === 0 ? 'th' : 'td';\n                                                return (\n                                                    <LookupTableCell\n                                                        tag={tag}\n                                                        value={cell.value}\n                                                        decorator={cell.decorator}\n                                                        comparisonValue={this.props.contrastValue}\n                                                        key={`lookup-table-cell-${rowIndex}-${index}`}\n                                                    />\n                                                );\n                                            })}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <section className=\"lookup-table-key\">\n                                <h4>Table key</h4>\n                                <ul className=\"lookup-table-key-list\">\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={4} tag=\"div\" comparisonValue={0} />\n                                        <div>\n                                            WCAG 3.0 Rating 4 - meets or exceeds the values on the APCA Lookup table\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={3} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 3 - 1-4% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={2} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 2 - 5-9% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={1} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 1 - 10-15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" rating={0} tag=\"div\" comparisonValue={0} />\n                                        <div>Rating 0 - &gt;15% below</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"preferred\" />\n                                        <div>Preferred for blocks of text</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"caution\" />\n                                        <div>Not recommended for blocks of text</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"N\" tag=\"div\" decorator=\"not-recommended\" />\n                                        <div>Font weight 100 should be avoided</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"X\" decorator=\"prohibited\" tag=\"div\" />\n                                        <div>Prohibited except for decorative purposes</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"©\" decorator=\"copyright\" tag=\"div\" />\n                                        <div>Use for copyright/by-line only</div>\n                                    </li>\n                                    <li>\n                                        <LookupTableCell value=\"NT\" decorator=\"non-text\" tag=\"div\" />\n                                        <div>Non-text only</div>\n                                    </li>\n                                </ul>\n                            </section>\n                        </div>\n                    </section>\n                </section>\n                <section>\n                    <h2>Example font combinations & ratings</h2>\n                    <div className=\"sample-container\">\n                        <SampleText\n                            fontSize=\"14px\"\n                            fontWeight={400}\n                            text=\"14px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 100)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={400}\n                            text=\"16px/400\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 90)}\n                        />\n                        <SampleText\n                            fontSize=\"16px\"\n                            fontWeight={600}\n                            text=\"16px/600\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 60)}\n                        />\n                        <SampleText\n                            fontSize=\"24px\"\n                            fontWeight={500}\n                            text=\"24px/500\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 55)}\n                        />\n                        <SampleText\n                            fontSize=\"30px\"\n                            fontWeight={300}\n                            text=\"30px/300\"\n                            foregroundColor={this.props.foregroundColor.hexString}\n                            backgroundColor={this.props.backgroundColor.hexString}\n                            rating={APCARating(this.props.contrastValue, 70)}\n                        />\n                    </div>\n                </section>\n                <hr />\n                <section>\n                    <h2>Attributions</h2>\n                    <p>\n                        SAPC & APCA were invented / developed by Andrew Somers, Senior Color Science Researcher at\n                        Myndex Technologies as part of the ongoing PerceptEx™ Perception Research Project.\n                    </p>\n\n                    <p>SAPC: S-LUV Advanced Perceptual Color — an appearance model for self-illuminated displays</p>\n\n                    <p>\n                        APCA: Advanced Perceptual Contrast Algorithm — a method for determining contrast to guide\n                        web-based design.\n                    </p>\n\n                    <p>\n                        APCA is derived from the SAPC model. APCA is a method for prediction pf suprathreshold visual\n                        contrast of text on displays. APCA results are intended to provide design guidance for best\n                        readability of web-based content.\n                    </p>\n                    <section>\n                        <h3>APCA DISCLAIMER</h3>\n\n                        <p>\n                            APCA is intended solely for web-based content per the W3 WCAG 3.0 standards, and the\n                            web-content version is licensed to the W3 per their cooperative agreement. Use for\n                            other-than web-based-content is restricted and/or prohibited. APCA is a public beta, under\n                            active development. Prior written authorization is required for the use of SAPC or APCA in\n                            the context of, or in applications for, transportation, aerospace, medical, military, or\n                            where human safety is involved.\n                        </p>\n                    </section>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\nimport ContrastChecker from '../ContrastChecker';\nimport './styles.scss';\n\nexport interface RatioDemoProps {\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    contrastValue: number;\n    isHex: boolean;\n    onColorChange: (foregroundColor: IColorData, backgroundColor: IColorData) => void;\n    onHexSwap: (isHex: boolean) => void;\n}\n\ntype RatioGradeText = 'pass' | 'fail';\n\nexport default class RatioDemo extends Component<RatioDemoProps> {\n    getGradeText(threshold: number): RatioGradeText {\n        return this.props.contrastValue < threshold ? 'fail' : 'pass';\n    }\n\n    render() {\n        const grade3 = this.getGradeText(3);\n        const grade45 = this.getGradeText(4.5);\n        const grade7 = this.getGradeText(7);\n\n        return (\n            <div className=\"ratio-demo\">\n                <section>\n                    <ContrastChecker\n                        foregroundColor={this.props.foregroundColor}\n                        backgroundColor={this.props.backgroundColor}\n                        contrastValue={this.props.contrastValue}\n                        isAPCA={false}\n                        isHex={this.props.isHex}\n                        onColorChange={this.props.onColorChange}\n                        onHexSwap={this.props.onHexSwap}\n                    />\n                </section>\n                <section>\n                    <h2>Normal text</h2>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"normal-aa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"normal-aaa-grade\">\n                            <span className={grade7}>{grade7}</span>\n                        </dd>\n                    </dl>\n                </section>\n                <section>\n                    <h2>Large text</h2>\n                    <p>\n                        Text that is 14pt (18.67px) and bold or any text bigger than 18pt (24px) is defined as large\n                        scale text.\n                    </p>\n                    <dl className=\"ratio-grades\">\n                        <dt>WCAG 2.1 AA</dt>\n                        <dd className=\"large-aa-grade\">\n                            <span className={grade3}>{grade3}</span>\n                        </dd>\n                        <dt>WCAG 2.1 AAA</dt>\n                        <dd className=\"large-aaa-grade\">\n                            <span className={grade45}>{grade45}</span>\n                        </dd>\n                    </dl>\n                </section>\n            </div>\n        );\n    }\n}\n","import { Component } from 'react';\n\nclass ProteanTabPane extends Component<IProteanTabPane> {\n    render() {\n        return (\n            <protean-tab-pane label={this.props.label} value={this.props.value} name={this.props.name}>\n                {this.props.children}\n            </protean-tab-pane>\n        );\n    }\n}\n\nexport default ProteanTabPane;\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanCheckbox extends Component<IProteanCheckbox> {\n    elementRef: RefObject<IProteanCheckbox> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const checkbox = this.elementRef?.current as IProteanCheckbox & IDict;\n\n        if (checkbox) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                checkbox[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-checkbox ref={this.elementRef}></protean-checkbox>;\n    }\n}\n","import { Component, createRef, RefObject } from 'react';\n\nexport default class ProteanTabContainer extends Component<IProteanTabContainer> {\n    elementRef: RefObject<IProteanTabContainer> = createRef();\n\n    componentDidMount() {\n        this.bindProps();\n    }\n\n    componentDidUpdate() {\n        this.bindProps();\n    }\n\n    bindProps() {\n        const tabContainer = this.elementRef?.current as IProteanTabContainer & IDict;\n\n        if (tabContainer) {\n            const { children, ref, ...propsToCopy } = this.props;\n\n            Object.entries(propsToCopy).forEach(([key, value]) => {\n                tabContainer[key] = value;\n            });\n        }\n    }\n\n    render() {\n        return <protean-tab-container ref={this.elementRef}>{this.props.children}</protean-tab-container>;\n    }\n}\n","export function luminance(rgb: number[]) {\n    const multipliers = [0.2126, 0.7152, 0.0722];\n    return rgb.reduce((acc, item, index) => {\n        let num = item / 255;\n        num = num <= 0.03928 ? num / 12.92 : Math.pow((num + 0.055) / 1.055, 2.4);\n\n        acc += num * multipliers[index];\n        return acc;\n    }, 0);\n}\n\nexport default function legacyContrast(rgb1: number[], rgb2: number[]) {\n    const lum1 = luminance(rgb1);\n    const lum2 = luminance(rgb2);\n\n    const darkest = Math.min(lum1, lum2);\n    const brightest = Math.max(lum1, lum2);\n\n    return (brightest + 0.05) / (darkest + 0.05);\n}\n","///////////////////////////////////////////////////////////////////////////////\n/** @preserve\n/////    SAPC APCA - Advanced Perceptual Contrast Algorithm\n/////           Beta 0.0.98G-4g W3 • contrast function only\n/////           DIST: W3 Revision date: Nov 29, 2021\n/////    Function to parse color values and determine Lc contrast\n/////    Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.\n/////    LICENSE:  W3 LICENSE\n/////    CONTACT: For SAPC/APCA Please use the ISSUES tab at:\n/////    https://github.com/Myndex/SAPC-APCA/\n// */\n///////////////////////////////////////////////////////////////////////////////\n/////\n/////    FORWARD CONTRAST USAGE:\n/////        Use sRGBtoY(color) to convert sRGB to Luminance (Y)\n/////        Then send Y-text and Y-background to APCAcontrast(Text, BG)\n/////\n/////    Lc = APCAcontrast( sRGBtoY(TEXTcolor) , sRGBtoY(BACKGNDcolor) );\n/////\n/////    Live Demonstrator at https://www.myndex.com/APCA/\n/////\n/////    REVERSE CONTRAST USAGE:\n/////        Send desired Lc contrast, and the BG (or txt) Y, and return type\n/////        APCAreverse(Lc,BG,ReType='TXT', polarity='best') // TXT or BG\n/////\n/////    text = APCAreverse(60, sRGBtoY(BACKGNDcolor) ,'TXT');\n///////////////////////////////////////////////////////////////////////////////\n\n// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n// @output_file_name SAPCsRGB.98.min.js\n// @code_url https://www.myndex.com/SAPC/JS/SAPCsRGB.98.js\n// ==/ClosureCompiler==\n// https://closure-compiler.appspot.com/home#code%3D%252F%252F%2520%253D%253DClosureCompiler%253D%253D%250A%252F%252F%2520%2540compilation_level%2520SIMPLE_OPTIMIZATIONS%250A%252F%252F%2520%2540output_file_name%2520SAPCsRGB.98.min.js%250A%252F%252F%2520%2540code_url%2520https%253A%252F%252Fwww.myndex.com%252FSAPC%252FJS%252FSAPCsRGB.98.js%250A%252F%252F%2520%253D%253D%252FClosureCompiler%253D%253D%250A\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////                      SAPC Method and APCA Algorithm\n/////   W3 Licensed Version: https://github.com/Myndex/apca-w3\n/////   GITHUB: https://github.com/Myndex/SAPC-APCA\n/////   DEVELOPER SITE: https://www.myndex.com/WEB/Perception\n/////\n/////   Acknowledgments and Thanks To:\n/////   • This project references the research and work of Dr.Lovie-Kitchin,\n/////     Dr.Legge, Dr.Arditi, M.Fairchild, R.Hunt, M.Stone, Dr.Poynton,\n/////     L.Arend, M.Luo, E.Burns, R.Blackwell, P.Barton, M.Brettel, and many\n/////     others — see refs at https://www.myndex.com/WEB/WCAG_CE17polarity\n/////   • Bruce Bailey of USAccessBoard for his encouragement, ideas, & feedback\n/////   • Chris Loiselle of Oracle for getting us back on track in a pandemic\n/////   • Chris Lilley of W3 for his early and continued comments & feedback.\n/////   • The many volunteer test subjects for participating in the studies.\n/////   • Principal research conducted at Myndex by A.Somers.\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////   *****  SAPC BLOCK  *****\n/////\n/////   For Evaluations, refer to this as: SAPC-8, v0.0.98 G-series constant 4g\n/////            SAPC • S-LUV Advanced Predictive Color\n/////\n/////   SIMPLE VERSION — Only the basic APCA contrast predictor.\n/////\n/////   Included Extensions & Model Features in this file:\n/////       • SAPC-8 Core Contrast (Base APCA, non-clinical use only)\n/////       • G series constants, group \"G-4g\" using a 2.4 monitor exponent\n/////       • sRGB to Y, parses numeric sRGB color to luminance\n/////       • SoftToe black level soft clamp and flare compensation.\n/////\n/////\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////               DISCLAIMER AND LIMITATIONS OF USE\n/////     APCA is an embodiment of certain suprathreshold contrast\n/////     prediction technologies and it is licensed to the W3 on a\n/////     limited basis for use in certain specific accessibility\n/////     guidelines for web content only. APCA may be used for\n/////     predicting colors for web content use without royalty.\n/////\n/////     However, Any such license excludes other use cases\n/////     not related to web content. Prohibited uses include\n/////     medical, clinical evaluation, human safety related,\n/////     aerospace, transportation, military applications,\n/////     and uses which are not specific to web based content\n/////     presented on self-illuminated displays or devices.\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n//////////   APCA 0.0.98 G 4g USAGE  //////////////////////////////////////////////\n///\n///  The API for \"APCA_0_0_98G_4g_minimal\" is trivially simple.\n///  Send text and background sRGB numeric values to the sRGBtoY() function,\n///  and send the resulting text-Y and background-Y to the APCAcontrast function,\n///  it returns a signed float with the numeric Lc contrast result.\n///\n///  The two inputs are TEXT color and BACKGROUND color in that order.\n///  Each must be a numeric NOT a string, as this simple version has\n///  no string parsing utilities. EXAMPLE:\n///  ________________________________________________________________________\n///\n///     txtColor = 0x123456; // color of the text, as will be rendered\n///     bgColor  = 0xabcdef; // color for the background, as will be rendered\n///\n///     contrastLc = APCAcontrast( sRGBtoY(txtColor) , sRGBtoY(bgColor) );\n///  ________________________________________________________________________\n///\n///                  **********   QUICK START   **********\n///\n///  Each color must be a 24bit color (8 bit per channel) as a single integer\n///  (or 0x) sRGB encoded color, i.e. White is either the integer 16777216 or\n///  the hex 0xffffff. A float is returned with a positive or negative value.\n///  Negative values mean light text and a dark background, positive values\n///  mean dark text and a light background. 60.0, or -60.0 is a contrast\n///  \"sort of like\" the old WCAG 2's 4.5:1. NOTE: the total range is now less\n///  than ± 110, so output can be rounded to a signed INT but DO NOT output\n///  an absolute value - light text on dark BG should return a negative number.\n///\n///     *****  IMPORTANT: Do Not Mix Up Text and Background inputs.  *****\n///     ****************   APCA is polarity dependent!   *****************\n///\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////  BEGIN APCA 0.0.98G 4g W3 BLOCK  \\///////////////////////////////////////\n////                                    \\/////////////////////////////////////\n\n//////////  ƒ  sRGBtoY()  //////////////////////////////////////////////////\n//export\nexport function sRGBtoY(sRGBcolor: number | string): number {\n    // send sRGB 8bpc (0xFFFFFF) or string\n\n    /////   APCA 0.0.98 G - 4g - W3 Constants   ////////////////////////\n\n    const mainTRC = 2.4; // 2.4 exponent emulates actual monitor perception\n\n    const sRco = 0.2126729,\n        sGco = 0.7151522,\n        sBco = 0.072175; // sRGB coefficients\n\n    ///// Parse color /////\n\n    let r, g, b;\n    // let a = 1.0; // for future use\n\n    if (typeof sRGBcolor === 'string') {\n        let rgba = parseString(sRGBcolor);\n        if (rgba) {\n            r = rgba[0];\n            g = rgba[1];\n            b = rgba[2];\n            // a = rgba[3]; // for future use\n        } else {\n            return -1;\n        } // return -1 on parse error\n    } else if (typeof sRGBcolor === 'number') {\n        /* eslint-disable */\n        (r = (sRGBcolor & 0xff0000) >> 16), (g = (sRGBcolor & 0x00ff00) >> 8), (b = sRGBcolor & 0x0000ff);\n        /* eslint-enable */\n    } else {\n        return -2;\n    } // return -2 on type error\n\n    // linearize r, g, or b then apply coefficients\n    // and sum then return the resulting luminance\n\n    function simpleExp(chan: number) {\n        return Math.pow(chan / 255.0, mainTRC);\n    }\n\n    return sRco * simpleExp(r as number) + sGco * simpleExp(g as number) + sBco * simpleExp(b as number);\n} // End sRGBtoY()\n\n//////////  ƒ  APCAcontrast()  /////////////////////////////////////////////\n//export\nexport function APCAcontrast(txtY: number, bgY: number): number {\n    // send linear Y (luminance) for text and background.\n    // txtY and bgY must be between 0.0-1.0\n    // IMPORTANT: Do not swap, polarity is important.\n\n    const icp = [0.0, 1.1]; // input range clamp / input error check\n\n    if (isNaN(txtY) || isNaN(bgY) || Math.min(txtY, bgY) < icp[0] || Math.max(txtY, bgY) > icp[1]) {\n        return 0; // return zero on error\n        // return 'error'; // optional string return for error\n    }\n\n    //////////   APCA 0.0.98 G - 4g - W3 Constants   ///////////////////////\n\n    const normBG = 0.56,\n        normTXT = 0.57,\n        revTXT = 0.62,\n        revBG = 0.65; // G-4g constants for use with 2.4 exponent\n\n    const blkThrs = 0.022,\n        blkClmp = 1.414,\n        scaleBoW = 1.14,\n        scaleWoB = 1.14,\n        loBoWoffset = 0.027,\n        loWoBoffset = 0.027,\n        loClip = 0.1,\n        deltaYmin = 0.0005;\n\n    //////////   SAPC LOCAL VARS   /////////////////////////////////////////\n\n    let SAPC = 0.0; // For raw SAPC values\n    let outputContrast = 0.0; // For weighted final values\n\n    // TUTORIAL\n\n    // Use Y for text and BG, and soft clamp black,\n    // return 0 for very close luminances, determine\n    // polarity, and calculate SAPC raw contrast\n    // Then scale for easy to remember levels.\n\n    // Note that reverse contrast (white text on black)\n    // intentionally returns a negative number\n    // Proper polarity is important!\n\n    //////////   BLACK SOFT CLAMP   ////////////////////////////////////////\n\n    // Soft clamps Y for either color if it is near black.\n    txtY = txtY > blkThrs ? txtY : txtY + Math.pow(blkThrs - txtY, blkClmp);\n    bgY = bgY > blkThrs ? bgY : bgY + Math.pow(blkThrs - bgY, blkClmp);\n\n    ///// Return 0 Early for extremely low ∆Y\n    if (Math.abs(bgY - txtY) < deltaYmin) {\n        return 0.0;\n    }\n\n    //////////   APCA/SAPC CONTRAST   //////////////////////////////////////\n\n    if (bgY > txtY) {\n        // For normal polarity, black text on white (BoW)\n\n        // Calculate the SAPC contrast value and scale\n\n        SAPC = (Math.pow(bgY, normBG) - Math.pow(txtY, normTXT)) * scaleBoW;\n\n        // Low Contrast smooth rollout to prevent polarity reversal\n        // and also a low-clip for very low contrasts\n        outputContrast = SAPC < loClip ? 0.0 : SAPC - loBoWoffset;\n    } else {\n        // For reverse polarity, light text on dark (WoB)\n        // WoB should always return negative value.\n\n        SAPC = (Math.pow(bgY, revBG) - Math.pow(txtY, revTXT)) * scaleWoB;\n\n        outputContrast = SAPC > -loClip ? 0.0 : SAPC + loWoBoffset;\n    }\n\n    // return Lc (lightness contrast) as a signed numeric value\n    // Round to the nearest whole number is optional.\n    // Rounded can be a signed INT as output will be within ± 127\n\n    return Math.round(outputContrast * 100.0);\n} // End APCAcontrast()\n\n/////  ƒ  parseString()  ///////////////////////////////////////////////////\n\nfunction parseString(colorString = '#abcdef') {\n    // strip spaces, #, & common junk and make a clean string\n    colorString = colorString.replace(/[\\s `~!@#$%^&*<>?{}:;\"'+=_-]/g, '');\n\n    colorString = colorString.toLowerCase(); // set lowercase\n\n    ///// CSS4 NAMED COLORS /////////////\n\n    // See if name is matched and overwrite the input\n    let namedColors: IDict<string> = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkgrey: 'a9a9a9',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkslategrey: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dimgrey: '696969',\n        dodgerblue: '1e90ff',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        grey: '808080',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred: 'cd5c5c',\n        indigo: '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgray: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightgrey: 'd3d3d3',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslategray: '778899',\n        lightslategrey: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370db',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'db7093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        slategrey: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32',\n        gray1: '111111',\n        gray2: '222222',\n        gray3: '333333',\n        gray4: '444444',\n        gray5: '555555',\n        gray6: '666666',\n        gray7: '777777',\n        gray8: '888888',\n        gray9: '999999',\n        graya: 'aaaaaa',\n        grayb: 'bbbbbb',\n        grayc: 'cccccc',\n        grayd: 'dddddd',\n        graye: 'eeeeee',\n        grey1: '111111',\n        grey2: '222222',\n        grey3: '333333',\n        grey4: '444444',\n        grey5: '555555',\n        grey6: '666666',\n        grey7: '777777',\n        grey8: '888888',\n        grey9: '999999',\n        greya: 'aaaaaa',\n        greyb: 'bbbbbb',\n        greyc: 'cccccc',\n        greyd: 'dddddd',\n        greye: 'eeeeee',\n    };\n\n    for (let key in namedColors) {\n        if (colorString === key) {\n            colorString = namedColors[key];\n            break;\n        }\n    }\n\n    // end of named colors section\n\n    // ARRAY OF COLOR DEFINITION OBJECTS\n    // objects with alpha are separated, and immediately\n    // follow the non-alpha version. Float rgb is not added yet.\n\n    let colorDefs = [\n        {\n            rex: /^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/,\n            parseStr: function (slices: RegExpExecArray) {\n                // rgb(0,0,0)\n                return [parseInt(slices[1]), parseInt(slices[2]), parseInt(slices[3])];\n            },\n        },\n        {\n            rex: /^([0-9|a-f])([0-9|a-f])([0-9|a-f])$/i,\n            parseStr: function (slices: RegExpExecArray) {\n                // fff\n                return [\n                    parseInt(slices[1] + slices[1], 16),\n                    parseInt(slices[2] + slices[2], 16),\n                    parseInt(slices[3] + slices[3], 16),\n                ];\n            },\n        },\n        {\n            rex: /^([0-9|a-f])([0-9|a-f])([0-9|a-f])([0-9|a-f])$/i,\n            parseStr: function (slices: RegExpExecArray) {\n                // fffa\n                return [\n                    parseInt(slices[1] + slices[1], 16),\n                    parseInt(slices[2] + slices[2], 16),\n                    parseInt(slices[3] + slices[3], 16),\n                    parseInt(slices[4] + slices[4], 16),\n                ];\n            },\n        },\n        {\n            rex: /^([0-9|a-f]{2})([0-9|a-f]{2})([0-9|a-f]{2})$/i,\n            parseStr: function (slices: RegExpExecArray) {\n                // ffffff\n                return [parseInt(slices[1], 16), parseInt(slices[2], 16), parseInt(slices[3], 16)];\n            },\n        },\n        {\n            rex: /^([0-9|a-f]{2})([0-9|a-f]{2})([0-9|a-f]{2})([0-9|a-f]{2})$/i,\n            parseStr: function (slices: RegExpExecArray) {\n                // ffffffaa\n                return [\n                    parseInt(slices[1], 16),\n                    parseInt(slices[2], 16),\n                    parseInt(slices[3], 16),\n                    parseInt(slices[4], 16),\n                ];\n            },\n        },\n    ];\n\n    // REGEX SEARCH CASCADE TO DETERMINE INPUT TYPE\n    // NEW: Alpha Inputs and the new \"2 Char Hex\"\n    // Which auto-makes grey based on the first\n    // two characters typed. (f4 becomes f4f4f4)\n    // this.r etc are type INT\n\n    let colorDefLen = colorDefs.length;\n    let rexInput, slicesInput;\n    let r, g, b;\n    let a = 255,\n        i = 0;\n\n    // Loop stops once valid color is found\n    for (; i < colorDefLen; i++) {\n        rexInput = colorDefs[i].rex;\n        slicesInput = rexInput.exec(colorString);\n\n        if (slicesInput) {\n            let channel = colorDefs[i].parseStr(slicesInput);\n            //  Shishado™ cleansing masks for that refreshing, clean feeling.\n            r = channel[0] & 0xff;\n            g = channel[1] & 0xff;\n            b = channel[2] & 0xff;\n            // @ts-ignore: No implicit any\n            isNaN(channel[3]) ? (this.a = 255) : (this.a = channel[3] & 0xff);\n\n            return [r, g, b, a];\n        }\n    }\n    return colorString; //false; // return false due to error\n}\n\n////\\                                  /////////////////////////////////////////\n/////\\  END APCA 0.0.98G 4g W3 BLOCK  /////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n","import { Component } from 'react';\nimport './styles.scss';\nimport APCADemo from '../APCADemo';\nimport RatioDemo from '../RatioDemo';\nimport ProteanTabPane from '../ProteanTabPane';\nimport ProteanCheckbox from '../ProteanCheckbox';\nimport ProteanTabContainer from '../ProteanTabContainer';\nimport legacyContrast from '../../utils/legacy-ratio';\nimport { APCAcontrast, sRGBtoY } from '../../utils/apca-contrast';\n\ninterface AppState {\n    activeTab: string;\n    darkModeEnabled: boolean;\n    foregroundColor: IColorData;\n    backgroundColor: IColorData;\n    APCAContrastValue: number;\n    legacyContrastRatio: number;\n    isHex: boolean;\n}\n\nexport default class App extends Component<{}, AppState> {\n    constructor(props: {}) {\n        super(props);\n\n        const darkModeEnabled = localStorage.getItem('darkModeEnabled') === 'true';\n        if (darkModeEnabled) {\n            document.documentElement.classList.remove('light');\n        }\n\n        const foregroundColor = {\n            hexString: '#1a1a1a',\n            rgbString: 'rgb(26, 26, 26)',\n            activeColor: '#1a1a1a',\n            hexNumber: parseInt('1a1a1a', 16),\n            rgb: [26, 26, 26],\n        };\n\n        const backgroundColor = {\n            hexString: '#c7b5fb',\n            rgbString: 'rgb(199, 181, 251)',\n            activeColor: '#c7b5fb',\n            hexNumber: parseInt('c7b5fb', 16),\n            rgb: [199, 181, 251],\n        };\n\n        this.state = {\n            activeTab: 'wcag-30',\n            darkModeEnabled,\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue: APCAcontrast(sRGBtoY(foregroundColor.hexNumber), sRGBtoY(backgroundColor.hexNumber)),\n            legacyContrastRatio: legacyContrast(foregroundColor.rgb, backgroundColor.rgb),\n            isHex: true,\n        };\n    }\n\n    onTabChange = (event: CustomEvent) => {\n        if ((event.target as HTMLElement).localName !== 'protean-tab-container') return;\n\n        this.setState({ activeTab: event.detail.value });\n    };\n\n    onLightModeToggle = (event: CustomEvent) => {\n        const darkModeEnabled = event.detail.checked;\n        localStorage.setItem('darkModeEnabled', darkModeEnabled);\n        this.setState({ darkModeEnabled });\n        document.documentElement.classList.toggle('light');\n    };\n\n    onColorChange = (foregroundColor: IColorData, backgroundColor: IColorData) => {\n        const APCAContrastValue = APCAcontrast(sRGBtoY(foregroundColor.hexNumber), sRGBtoY(backgroundColor.hexNumber));\n        const legacyContrastRatio = legacyContrast(foregroundColor.rgb, backgroundColor.rgb);\n\n        this.setState({\n            foregroundColor,\n            backgroundColor,\n            APCAContrastValue,\n            legacyContrastRatio,\n        });\n    };\n\n    onHexSwap = (isHex: boolean) => {\n        this.setState(({ foregroundColor, backgroundColor }) => {\n            return {\n                isHex,\n                foregroundColor: {\n                    ...foregroundColor,\n                    activeColor: isHex ? foregroundColor.hexString : foregroundColor.rgbString,\n                },\n                backgroundColor: {\n                    ...backgroundColor,\n                    activeColor: isHex ? backgroundColor.hexString : backgroundColor.rgbString,\n                },\n            };\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"app content\">\n                <div className=\"header-content\">\n                    <h1>\n                        Contrast <span className=\"hidden-s\">tools</span>\n                    </h1>\n                    <ProteanCheckbox\n                        className=\"dark-mode-toggle\"\n                        label=\"Dark mode\"\n                        variant=\"toggle\"\n                        alignment=\"right\"\n                        checked={this.state.darkModeEnabled}\n                        onchange={this.onLightModeToggle}\n                    />\n                </div>\n                <ProteanTabContainer value={this.state.activeTab} onchange={this.onTabChange}>\n                    <ProteanTabPane value=\"wcag-30\" label=\"WCAG 3.0\">\n                        <APCADemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.APCAContrastValue}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </ProteanTabPane>\n                    <protean-tab-pane value=\"wcag-21\" label=\"WCAG 2.1\">\n                        <RatioDemo\n                            foregroundColor={this.state.foregroundColor}\n                            backgroundColor={this.state.backgroundColor}\n                            contrastValue={this.state.legacyContrastRatio}\n                            isHex={this.state.isHex}\n                            onColorChange={this.onColorChange}\n                            onHexSwap={this.onHexSwap}\n                        />\n                    </protean-tab-pane>\n                </ProteanTabContainer>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\nimport { defineCustomElements } from 'protean-elements/loader';\n\ndefineCustomElements();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}